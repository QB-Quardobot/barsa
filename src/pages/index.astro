---
import Base from '../layouts/Base.astro';
import Countdown from '../components/Countdown.astro';
import EarningsTicker from '../components/EarningsTicker.astro';

const deadline = new Date();
deadline.setHours(deadline.getHours() + 24);
const deadlineISO = deadline.toISOString();

// Debug mode - set to false before production
const DEBUG_MODE = false;
---

<Base title="AI Model 2.0" description="–ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å $500‚Äì$2 500 –Ω–∞ AI-–º–æ–¥–µ–ª—è—Ö –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã, –±–µ–∑ –ª–∏—Ü–∞ –∏ –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π. –°–∏—Å—Ç–µ–º–∞ AI Model 2.0.">
  
  {DEBUG_MODE && (
    <div id="tg-debug-panel" style="position: fixed; bottom: 0; left: 0; right: 0; background: rgba(0,0,0,0.95); color: #0f0; font-family: monospace; font-size: 11px; padding: 10px; z-index: 999999; max-height: 250px; overflow-y: auto; border-top: 2px solid #0f0; box-shadow: 0 -4px 20px rgba(0,255,0,0.3); user-select: text; -webkit-user-select: text;">
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px; flex-wrap: wrap; gap: 8px;">
        <strong style="color: #0ff; font-size: 13px; user-select: none;">üîß TELEGRAM WEBAPP DEBUGGER</strong>
        <div style="display: flex; gap: 4px;">
          <button onclick="window.copyDebugLogs?.()" style="background: #808; color: #fff; border: none; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 10px;">üìã Copy</button>
          <button onclick="window.testFullscreen?.()" style="background: #00f; color: #fff; border: none; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 10px;">üì± FS</button>
          <button onclick="window.testSwipes?.()" style="background: #f80; color: #fff; border: none; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 10px;">üö´ Swipe</button>
          <button onclick="window.getTelegramInfo?.()" style="background: #080; color: #fff; border: none; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 10px;">‚ÑπÔ∏è Info</button>
          <button onclick="document.getElementById('tg-debug-panel').remove()" style="background: #f00; color: #fff; border: none; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 10px;">‚úï</button>
        </div>
      </div>
      <div id="tg-debug-status" style="margin-bottom: 8px; padding: 6px; background: rgba(0,100,0,0.3); border-radius: 4px; border: 1px solid #0f0; user-select: text;">
        <div style="color: #ff0;">Status: <span id="tg-status-text">Initializing...</span></div>
      </div>
      <div id="tg-debug-log" style="line-height: 1.4; max-height: 150px; overflow-y: auto; user-select: text; -webkit-user-select: text;"></div>
    </div>
  )}
  
  <!-- Hero: –õ–ò–î-–ú–ê–ì–ù–ò–¢ -->
  <section class="hero-section">
    <div class="container" id="hero-container">
        
        <!-- Animated Dot Badge - Centered -->
        <div class="text-center mb-8 reveal-up">
          <div class="single-dot-badge">
            <span class="pulsing-dot"></span>
          </div>
        </div>
        
        <!-- Headline -->
        <h1 class="hero-title reveal-up">
          –ö–∞–∫ –º–æ–ª–æ–¥—ã–µ —Ä–µ–±—è—Ç–∞ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –ø–µ—Ä–≤—ã–µ 
          <span class="gradient-text">$500‚Äì$2 500</span> –Ω–∞ AI-–º–æ–¥–µ–ª—è—Ö 
          –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã, –±–µ–∑ –ª–∏—Ü–∞ –∏ <span class="gradient-text">–±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π</span>
        </h1>
        
        <!-- Social Proof Photos - Horizontal -->
        <div class="proof-row reveal-scale">
          <div class="proof-item">
            <div class="proof-image-placeholder">
              <span class="proof-image-icon">üí∞</span>
            </div>
            <p class="proof-caption">–§–æ—Ç–æ –¥–æ—Ö–æ–¥–æ–≤</p>
          </div>
          <div class="proof-item">
            <div class="proof-image-placeholder">
              <span class="proof-image-icon">ü§ñ</span>
            </div>
            <p class="proof-caption">AI –º–æ–¥–µ–ª—å —Ñ–æ—Ç–æ</p>
          </div>
          <div class="proof-item">
            <div class="proof-image-placeholder">
              <span class="proof-image-icon">üë§</span>
            </div>
            <p class="proof-caption">–§–æ—Ç–æ –ò–ª—å–∏</p>
          </div>
        </div>
        
        <!-- Divider -->
        <div class="hero-divider"></div>
        
        <!-- Pain Points Section -->
        <div class="pain-section">
          <h2 class="pain-title reveal-up">
            –•–≤–∞—Ç–∏—Ç –ø—ã—Ç–∞—Ç—å—Å—è —É–≥–∞–¥–∞—Ç—å, —á—Ç–æ –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç –∏–ª–∏ –Ω–µ—Ç.
          </h2>
          
          <p class="pain-text reveal-up">
            –¢—ã —É–∂–µ –º–æ–≥ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∫—Ä–∏–ø—Ç—É, NFT, —Ç–æ–≤–∞—Ä–∫—É, –∞—Ä–±–∏—Ç—Ä–∞–∂ ‚Äî –∏ –≤—Å–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–ª–æ—Å—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ:
          </p>
          
          <!-- Old Attempts - Horizontal -->
          <div class="old-attempts-row reveal-scale">
            <div class="old-attempt-item">
              <span class="old-icon">‚Çø</span>
              <p class="old-label">–ö—Ä–∏–ø—Ç–∞</p>
            </div>
            <div class="old-attempt-item">
              <span class="old-icon">üñºÔ∏è</span>
              <p class="old-label">NFT</p>
            </div>
            <div class="old-attempt-item">
              <span class="old-icon">üì¶</span>
              <p class="old-label">–¢–æ–≤–∞—Ä–∫–∞</p>
            </div>
            <div class="old-attempt-item">
              <span class="old-icon">üìä</span>
              <p class="old-label">–ê—Ä–±–∏—Ç—Ä–∞–∂</p>
            </div>
          </div>
          
          <!-- Pain Points Cards -->
          <div class="pain-cards reveal-up">
            <div class="pain-card">
              <div class="pain-card-icon">‚è±Ô∏è</div>
              <div class="pain-card-content">
                <h3 class="pain-card-title">–ü—Ä–æ—Å—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è</h3>
                <p class="pain-card-desc">–ú–µ—Å—è—Ü—ã —É—à–ª–∏ –Ω–∞ –ø–æ–ø—ã—Ç–∫–∏, –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–æ–ª—å</p>
              </div>
            </div>
            <div class="pain-card">
              <div class="pain-card-icon">üìâ</div>
              <div class="pain-card-content">
                <h3 class="pain-card-title">–ù–æ–ª—å —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏</h3>
                <p class="pain-card-desc">–°–µ–≥–æ–¥–Ω—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –∑–∞–≤—Ç—Ä–∞ —É–∂–µ –Ω–µ—Ç</p>
              </div>
            </div>
            <div class="pain-card">
              <div class="pain-card-icon">üîÆ</div>
              <div class="pain-card-content">
                <h3 class="pain-card-title">–£–ø—É—â–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h3>
                <p class="pain-card-desc">–ß—É–≤—Å—Ç–≤–æ, —á—Ç–æ –≥–¥–µ-—Ç–æ —Ä—è–¥–æ–º –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –±—É–¥—É—â–µ–≥–æ, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –µ—â–µ –Ω–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Solution Section -->
        <div class="solution-section">
          <div class="solution-intro-text reveal-up">
            <h2 class="solution-big-title">–í–æ—Ç –æ–Ω–∞‚Ä¶</h2>
            <p class="solution-description">
              –í 2025 –≥–æ–¥—É –ø–æ—è–≤–∏–ª—Å—è —Ä—ã–Ω–æ–∫, –≥–¥–µ —Ç—ã—Å—è—á–∏ –ª—é–¥–µ–π –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏, 
              –Ω–µ —Å–Ω–∏–º–∞—è –ª–∏—Ü–∞, –Ω–µ –±–µ–≥–∞—è –∑–∞ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ –Ω–µ –≤–∫–ª–∞–¥—ã–≤–∞—è –Ω–∏ —Ü–µ–Ω—Ç–∞ –≤ —Ä–µ–∫–ª–∞–º—É.
            </p>
          </div>
          
          <div class="solution-hero-card reveal-up">
            <div class="solution-badge">üî• –ù–æ–≤–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è 2026</div>
            <h2 class="solution-hero-title">
              –≠—Ç–æ ‚Äî <span class="gradient-text">AI-–º–æ–¥–µ–ª–∏</span>.
            </h2>
            <p class="solution-hero-subtitle">
              –¶–∏—Ñ—Ä–æ–≤—ã–µ –¥–µ–≤—É—à–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞ —Ç–µ–±—è, –¥–∞–∂–µ –ø–æ–∫–∞ —Ç—ã —Å–ø–∏—à—å.
            </p>
          </div>
          
          <div class="solution-promise-card reveal-up">
            <div class="promise-label">üíé –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å</div>
            <p class="promise-text">
              –ò –µ—Å–ª–∏ —Ç—ã –¥–æ—á–∏—Ç–∞–µ—à—å –¥–æ –∫–æ–Ω—Ü–∞, —Ç—ã –ø–æ–π–º—ë—à—å, –∫–∞–∫ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å 
              –∏ –≤—ã–π—Ç–∏ –Ω–∞ –ø–µ—Ä–≤—ã–µ <strong class="gradient-text">$200‚Äì1000 –∑–∞ 30 –¥–Ω–µ–π</strong>,
              –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –Ω–æ—É—Ç–±—É–∫ –∏ –ø–æ—à–∞–≥–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É, –∫–æ—Ç–æ—Ä—É—é —è –Ω–∞–∑—ã–≤–∞—é <strong>AI Model 2.0</strong>.
            </p>
          </div>
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- About Ilya -->
  <section class="about-section">
    <div class="container">
        
        <!-- Founder Header -->
        <div class="founder-header reveal-scale">
          <div class="founder-avatar">
            <div class="photo-circle">
              <span class="avatar-emoji">üë§</span>
              <div class="earning-corner">
                <div class="earning-amount">$10K</div>
                <div class="earning-period">–º–µ—Å</div>
              </div>
            </div>
          </div>
          <div class="founder-name-block">
            <div class="founder-name">–ò–ª—å—è</div>
            <div class="founder-role">AI-–ø—Ä–æ–¥—é—Å–µ—Ä</div>
          </div>
        </div>
        
        <!-- Story -->
        <div class="founder-story reveal-fade">
          
          <p class="story-intro">
            –ú–µ–Ω—è –∑–æ–≤—É—Ç <strong>–ò–ª—å—è</strong>, —è ‚Äî AI-–ø—Ä–æ–¥—é—Å–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—à–µ–ª –Ω–∞ 
            <strong class="gradient-text">$10 000 –≤ –º–µ—Å—è—Ü</strong> –±–ª–∞–≥–æ–¥–∞—Ä—è AI-–º–æ–¥–µ–ª—è–º.
          </p>
          
          <p class="story-para">
            –ö–æ–≥–¥–∞-—Ç–æ —è –±—ã–ª –≤ —Ç–æ–π –∂–µ —Ç–æ—á–∫–µ, —á—Ç–æ –∏ —Ç—ã: –ø—Ä—ã–≥–∞–ª –∏–∑ —Ç–µ–º—ã –≤ —Ç–µ–º—É ‚Äî –ø—Ä–æ–±–æ–≤–∞–ª –∫—Ä–∏–ø—Ç—É, 
            –∞—Ä–±–∏—Ç—Ä–∞–∂, —à–æ—Ä—Ç—Å—ã, —Ç–æ–≤–∞—Ä–∫—É, —Å–∏–¥–µ–ª –Ω–æ—á–∞–º–∏ –∏ –∏—Å–∫–∞–ª —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å‚Ä¶
          </p>
          
          <p class="story-para">
            –í–µ–∑–¥–µ –±—ã–ª–æ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ: –∏–ª–∏ —Å–ª–∏—à–∫–æ–º —Ä—É—Ç–∏–Ω–Ω–æ, –∏–ª–∏ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ, 
            –∏–ª–∏ –≤—Å–µ —É–ø–∏—Ä–∞–ª–æ—Å—å –≤ –±–µ—à–µ–Ω—ã–µ –±—é–¥–∂–µ—Ç—ã.
          </p>
          
          <div class="story-moment">
            <p class="moment-text">
              –Ø –ø–æ–º–Ω—é, –∫–∞–∫ –æ–¥–Ω–æ–π —Ç–∞–∫–æ–π –Ω–æ—á—å—é –ª–∏—Å—Ç–∞–ª –∞–Ω–≥–ª–∏–π—Å–∫–∏–π YouTube –∏ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —Ñ—Ä–∞–∑—É:
            </p>
            <blockquote class="moment-quote">
              üí° "AI-–º–æ–¥–µ–ª–∏ ‚Äî –Ω–æ–≤–∞—è —ç–ø–æ—Ö–∞ –æ–Ω–ª–∞–π–Ω –∑–∞—Ä–∞–±–æ—Ç–∫–∞"
            </blockquote>
            <p class="moment-text">
              –Ø –Ω–µ –ø–æ–≤–µ—Ä–∏–ª. –ö–∞–∑–∞–ª–æ—Å—å, —ç—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ö–∞–π–ø –ø—Å–µ–≤–¥–æ-–≥—É—Ä—É. –ù–æ —Ä–µ—à–∏–ª –ø—Ä–æ–≤–µ—Ä–∏—Ç—å‚Ä¶
            </p>
            <p class="moment-result">–ò –æ—Ñ–∏–≥–µ–ª –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.</p>
          </div>
          
          <p class="story-para">
            –ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é —è —Å–æ–∑–¥–∞–ª —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä–æ–≤—É—é –º–æ–¥–µ–ª—å. 
            –ö–æ–≥–¥–∞ –æ–Ω–∞ –ø—Ä–∏–Ω–µ—Å–ª–∞ –º–Ω–µ –ø–µ—Ä–≤—ã–µ –¥–µ–Ω—å–≥–∏, —è –ø—Ä–æ—Å—Ç–æ —Å–∏–¥–µ–ª –∏ —É–ª—ã–±–∞–ª—Å—è –≤ —ç–∫—Ä–∞–Ω‚Ä¶
          </p>
          
          <div class="story-stats">
            <div class="stat-line">
              <span class="stat-label">–ß–µ—Ä–µ–∑ –º–µ—Å—è—Ü:</span>
              <span class="stat-value gradient-text">$1,000</span>
            </div>
            <div class="stat-line featured">
              <span class="stat-label">–ß–µ—Ä–µ–∑ 4 –º–µ—Å—è—Ü–∞:</span>
              <span class="stat-value gradient-text">$10,000</span>
            </div>
          </div>
          
          <p class="story-how">
            –ë–µ–∑ –∫–æ–º–∞–Ω–¥—ã, –±–µ–∑ –æ—Ñ–∏—Å–∞, –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã. –ü—Ä–æ—Å—Ç–æ —Å–∏—Å—Ç–µ–º–∞, –≥–¥–µ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å—ã.
          </p>
          
          <p class="story-para">
            –¢–∞–∫ –∫–∞–∫ —è –∏–º–µ—é –æ–≥—Ä–æ–º–Ω—ã–π –æ–ø—ã—Ç –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, —Ç–æ —Ä–µ—à–∏–ª –æ–±—É—á–∞—Ç—å –¥—Ä—É–≥–∏—Ö ‚Äî 
            –∫–∞–∫ –∑–∞ –ø–∞—Ä—É –¥–Ω–µ–π —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –º–æ–¥–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ—Ö–æ–¥ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.
          </p>
          
          <div class="story-cta-block">
            <span class="cta-badge">‚ö° –ë–ï–ó –ö–û–ù–ö–£–†–ï–ù–¶–ò–ò</span>
            <p class="cta-text">
              –¢–æ, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –∑–Ω–∞—é—Ç 0.1% ‚Äî —á–µ—Ä–µ–∑ –≥–æ–¥ –±—É–¥–µ—Ç –º–µ–π–Ω—Å—Ç—Ä–∏–º–æ–º.
            </p>
          </div>
          
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- What You Get -->
  <section class="what-section">
    <div class="container">
        
        <!-- Models Banner -->
        <div class="models-banner reveal-scale">
          <div class="banner-photo">üë©</div>
          <div class="banner-photo">üë±‚Äç‚ôÄÔ∏è</div>
          <div class="banner-photo">üë©‚Äçü¶∞</div>
        </div>
        
        <!-- Intro -->
        <div class="what-intro reveal-fade">
          <h2 class="what-headline">–ï—Å–ª–∏ –∫–æ—Ä–æ—Ç–∫–æ:</h2>
          <p class="what-desc">
            –¢—ã –º–æ–∂–µ—à—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –º–æ—é —Å–∏—Å—Ç–µ–º—É –∏ –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ AI-–º–æ–¥–µ–ª—è—Ö —É–∂–µ –≤ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü.
          </p>
        </div>
        
        <!-- Benefits -->
        <div class="benefits-section">
          <h3 class="benefits-title">‚öôÔ∏è –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å, –ø—Ä–∏–º–µ–Ω–∏–≤ —Å–∏—Å—Ç–µ–º—É –Ω–∞ —Å–µ–±–µ:</h3>
          
          <div class="benefits-list">
            <div class="benefit-item reveal-up">
              <span class="benefit-num">1</span>
              <div class="benefit-content">
                <h4 class="benefit-name">–¢–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ü–∏—Ñ—Ä–æ–≤—É—é –º–æ–¥–µ–ª—å</h4>
                <p class="benefit-text">(—Å–æ–∑–¥–∞–Ω–Ω—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é –ø–æ —Ç–≤–æ–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º)</p>
              </div>
            </div>
            
            <div class="benefit-item reveal-up">
              <span class="benefit-num">2</span>
              <div class="benefit-content">
                <h4 class="benefit-name">–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω</h4>
                <p class="benefit-text">–∫–∞–∫ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä—ã –∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ –°–®–ê (–≤–µ–¥—å —ç—Ç–∞ –∞—É–¥–∏—Ç–æ—Ä–∏—è —Å–∞–º–∞—è –ø–ª–∞—Ç–µ–∂–µ—Å–ø–æ—Å–æ–±–Ω–∞—è –≤ –º–∏—Ä–µ)</p>
              </div>
            </div>
            
            <div class="benefit-item reveal-up">
              <span class="benefit-num">3</span>
              <div class="benefit-content">
                <h4 class="benefit-name">–°—Ç—Ä–∞—Ç–µ–≥–∏—é –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏</h4>
                <p class="benefit-text">–≥–¥–µ —Ñ–∞–Ω–∞—Ç—ã –ø–ª–∞—Ç—è—Ç –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å —Ç–≤–æ–µ–π –º–æ–¥–µ–ª—å—é</p>
              </div>
            </div>
            
            <div class="benefit-item reveal-up">
              <span class="benefit-num">4</span>
              <div class="benefit-content">
                <h4 class="benefit-name">–°–∏—Å—Ç–µ–º—É –≤—ã–≤–æ–¥–∞ –¥–µ–Ω–µ–≥</h4>
                <p class="benefit-text">–Ω–∞ –∫–∞—Ä—Ç—É –∏–ª–∏ –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª–µ–∫</p>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Summary -->
        <div class="what-summary reveal-fade">
          <p class="summary-main">
            –¢—ã —Å–æ–∑–¥–∞–µ—à—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ‚Äî –∞ —Å–∏—Å—Ç–µ–º–∞ –¥–µ–ª–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ: —Ç—Ä–∞—Ñ–∏–∫, –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—é, –≤—ã–ø–ª–∞—Ç—ã.
          </p>
          
          <div class="no-hassle">
            <div class="no-item">
              <span class="no-icon">‚ùå</span>
              <span class="no-text">–ù–∏–∫–∞–∫–∏—Ö –ø—É—Å—Ç—ã—Ö –≤–ª–∏–≤–∞–Ω–∏–π –≤ —Ä–µ–∫–ª–∞–º—É</span>
            </div>
            <div class="no-item">
              <span class="no-icon">‚ùå</span>
              <span class="no-text">–ù–∏–∫–∞–∫–∏—Ö —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ö–µ–º</span>
            </div>
            <div class="no-item">
              <span class="no-icon">‚ùå</span>
              <span class="no-text">–ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–æ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥</span>
            </div>
            <div class="no-item">
              <span class="no-icon">‚ùå</span>
              <span class="no-text">–ù–∏–∫–∞–∫–æ–π –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏</span>
            </div>
          </div>
        </div>
        
        <!-- Final CTA -->
        <div class="final-pitch reveal-fade">
          <p class="pitch-profession">
            –ü—Ä–æ—Å—Ç–æ –Ω–æ–≤–∞—è –ø—Ä–æ—Ñ–µ—Å—Å–∏—è 2026 –≥–æ–¥–∞ ‚Äî <span class="gradient-text">AI-–ø—Ä–æ–¥—é—Å–µ—Ä</span>.
          </p>
          <p class="pitch-formula">
            –¢–æ–ª—å–∫–æ –¢—ã + –ù–æ—É—Ç + –ù–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ = üí∏
          </p>
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- System -->
  <section class="system-section">
    <div class="container">
        
        <!-- Students Banner -->
        <div class="students-banner reveal-scale">
          <div class="student-photo">
            <div class="student-circle">üë©‚Äçüíº</div>
            <span class="student-earn">$2.5K</span>
          </div>
          <div class="student-photo">
            <div class="student-circle">üë®‚Äçüíª</div>
            <span class="student-earn">$8K</span>
          </div>
          <div class="student-photo">
            <div class="student-circle">üë©‚Äçüéì</div>
            <span class="student-earn">$5K</span>
          </div>
        </div>
        
        <!-- Header -->
        <div class="system-header reveal-fade">
          <h2 class="system-main-title">üì¶ –í–æ—Ç —Ç–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Å–∏—Å—Ç–µ–º–∞ —Å AI-–ú–æ–¥–µ–ª—è–º–∏:</h2>
        </div>
        
        <!-- Timeline -->
        <div class="system-timeline">
          
          <div class="timeline-step reveal-up">
            <div class="step-marker">
              <span class="step-num">1</span>
            </div>
            <div class="step-card">
              <h3 class="step-title">–°–æ–∑–¥–∞–Ω–∏–µ AI-–º–æ–¥–µ–ª–∏ —Å –Ω—É–ª—è</h3>
              <ul class="step-list">
                <li>‚Äì –ü–æ–¥–±–æ—Ä –≤–Ω–µ—à–Ω–æ—Å—Ç–∏, —Å—Ç–∏–ª—è –∏ –≤–∞–π–±–∞</li>
                <li>‚Äì –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–π ai-–º–æ–¥–µ–ª–∏ (–∫–æ—Ç–æ—Ä—É—é –Ω–∏–∫—Ç–æ –Ω–µ –æ—Ç–ª–∏—á–∏—Ç –æ—Ç —Ä–µ–∞–ª—å–Ω–æ–π –¥–µ–≤—É—à–∫–∏)</li>
                <li>‚Äì –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–∑—É–∞–ª–∞ –¥–ª—è Instagram/ Threads –∏ –¥—Ä—É–≥–∏—Ö —Å–æ—Ü—Å–µ—Ç–µ–π –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è</li>
              </ul>
            </div>
          </div>
          
          <div class="timeline-step reveal-up">
            <div class="step-marker">
              <span class="step-num">2</span>
            </div>
            <div class="step-card">
              <h3 class="step-title">–ö–æ–Ω—Ç–µ–Ω—Ç-—Å–∏—Å—Ç–µ–º–∞</h3>
              <ul class="step-list">
                <li>‚Äì –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–æ—Å—Ç–æ–≤</li>
                <li>‚Äì –°—Ç—Ä–∞—Ç–µ–≥–∏—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –Ω–∞ –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é</li>
                <li>‚Äì –û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–π —Ç—Ä–∞—Ñ–∏–∫ –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π</li>
              </ul>
            </div>
          </div>
          
          <div class="timeline-step reveal-up">
            <div class="step-marker">
              <span class="step-num">3</span>
            </div>
            <div class="step-card">
              <h3 class="step-title">–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ Fanvue</h3>
              <ul class="step-list">
                <li>‚Äì –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</li>
                <li>‚Äì –ö–∞–∫ –≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–ø–∏—Å–∫—É –∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—é –æ–±—â–µ–Ω–∏—è</li>
                <li>‚Äì –ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –ø–µ—Ä–≤—ã—Ö –¥–Ω–µ–π</li>
                <li>‚Äì –∫–∞–∫ –ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É</li>
              </ul>
            </div>
          </div>
          
          <div class="timeline-step reveal-up">
            <div class="step-marker">
              <span class="step-num">4</span>
            </div>
            <div class="step-card">
              <h3 class="step-title">–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ –º–∞—Å—à—Ç–∞–±</h3>
              <ul class="step-list">
                <li>‚Äì –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á</li>
                <li>‚Äì –ó–∞–ø—É—Å–∫ –≤—Ç–æ—Ä–æ–π –º–æ–¥–µ–ª–∏</li>
                <li>‚Äì –í—ã—Ö–æ–¥ –Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ <strong class="text-green">$10 000‚Äì$30 000/–º–µ—Å</strong></li>
              </ul>
            </div>
          </div>
          
          <div class="timeline-step reveal-up">
            <div class="step-marker">
              <span class="step-num">5</span>
            </div>
            <div class="step-card">
              <h3 class="step-title">–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ MHP (Mind Hunter Protocol)</h3>
              <ul class="step-list">
                <li>‚Äì –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–≥–æ —Ä—ã–Ω–∫–∞</li>
                <li>‚Äì –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤</li>
                <li>‚Äì –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Ö–æ–¥ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –º–µ—Å—è—Ü–∞</li>
              </ul>
            </div>
          </div>
          
        </div>
        
        <!-- CTA -->
        <div class="system-finale reveal-fade">
          <p class="finale-text">üî• –ò –≤—Å–µ —ç—Ç–æ –µ—Å—Ç—å –≤ –º–æ–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ <strong class="gradient-text">¬´AI Model 2.0¬ª</strong></p>
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- Why Now -->
  <section class="why-now-section">
    <div class="container">
        
        <!-- Intro -->
        <div class="why-intro reveal-fade">
          <h2 class="why-main-title">–°–º–æ—Ç—Ä–∏.</h2>
          <p class="why-para">
            –¢—ã —É–∂–µ –≤–∏–¥–µ–ª, –∫–∞–∫ –Ω–æ–≤—ã–µ —Ç–µ–º–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è –∏ –∏—Å—á–µ–∑–∞—é—Ç.<br/>
            –ö—Ä–∏–ø—Ç–∞, NFT, –∞—Ä–±–∏—Ç—Ä–∞–∂ ‚Äî –≤–∑–ª–µ—Ç, —Ö–∞–π–ø, –æ–±–≤–∞–ª.
          </p>
          <p class="why-standout">
            AI-–º–æ–¥–µ–ª–∏ ‚Äî —ç—Ç–æ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–æ–µ.
          </p>
        </div>
        
        <!-- Industry Block -->
        <div class="why-industry reveal-up">
          <p class="industry-text">
            –≠—Ç–æ —Ü–µ–ª–∞—è <strong>–∏–Ω–¥—É—Å—Ç—Ä–∏—è</strong>, –≥–¥–µ –≤—Å–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è.
          </p>
          <div class="industry-points">
            <div class="point-line">üìà –°–ø—Ä–æ—Å –æ–≥—Ä–æ–º–Ω—ã–π, –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –ø–æ—á—Ç–∏ –Ω–µ—Ç</div>
            <div class="point-line">üéØ –¢—ã –Ω–µ –∑–∞–≤–∏—Å–∏—à—å –æ—Ç –±–∏—Ä–∂, –∫—É—Ä—Å–æ–≤ –∏–ª–∏ —É–¥–∞—á–∏</div>
          </div>
          <p class="industry-work">
            –¢—ã —É–ø—Ä–∞–≤–ª—è–µ—à—å —Ü–∏—Ñ—Ä–æ–≤—ã–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7,<br/>
            –ê —Ç—ã –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—à—å –ø—Ä–æ—Ü–µ—Å—Å –∏ –ø–æ–ª—É—á–∞–µ—à—å –ø—Ä–∏–±—ã–ª—å.
          </p>
        </div>
        
        <!-- Visual Graph -->
        <div class="niche-visual reveal-scale">
          <div class="visual-placeholder">
            <div class="visual-icon">üìä</div>
            <p class="visual-label">AI-–º–æ–¥–µ–ª–∏ –≤ –Ω–µ–Ω–∞—Å—ã—â–µ–Ω–Ω–æ–π –Ω–∏—à–µ</p>
            <p class="visual-hint">(–ù–∏–∑–∫–∞—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏—è √ó –í—ã—Å–æ–∫–∏–π —Å–ø—Ä–æ—Å)</p>
          </div>
        </div>
        
        <!-- Why Important -->
        <div class="why-important reveal-fade">
          <h3 class="important-title">üöÄ –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –∏–º–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å:</h3>
          
          <div class="important-list">
            <div class="important-item">
              <span class="important-marker">‚Üí</span>
              <div class="important-content">
                <strong>–†—ã–Ω–æ–∫ —Ç–æ–ª—å–∫–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è</strong> ‚Äî –≤–æ–π—Ç–∏ –º–æ–∂–µ—Ç –∫–∞–∂–¥—ã–π 
                (–î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç –æ–ø—ã—Ç–∞ –≤ IT, –¥–∏–∑–∞–π–Ω–µ –∏–ª–∏ –ò–ò, –¥–∞–∂–µ –º–æ—è –º–∞–º–∞ —Å–æ–∑–¥–∞–ª–∞ —Å–µ–±–µ –º–æ–¥–µ–ª—å..)
              </div>
            </div>
            
            <div class="important-item">
              <span class="important-marker">‚Üí</span>
              <div class="important-content">
                <strong>–ö–æ–Ω–∫—É—Ä–µ–Ω—Ü–∏–∏ –ø–æ—á—Ç–∏ –Ω–µ—Ç</strong> ‚Äî –º–æ–∂–Ω–æ –∑–∞–Ω—è—Ç—å –ø—Ä–æ—Ü–≤–µ—Ç–∞—é—â—É—é –Ω–∏—à—É –ø–µ—Ä–≤—ã–º
              </div>
            </div>
            
            <div class="important-item">
              <span class="important-marker">‚Üí</span>
              <div class="important-content">
                <strong>–í—Å–µ –ª–µ–≥–∞–ª—å–Ω–æ</strong> ‚Äî –≤—ã–ø–ª–∞—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ
              </div>
            </div>
            
            <div class="important-item">
              <span class="important-marker">‚Üí</span>
              <div class="important-content">
                <strong>–§–æ—Ä–º–∞—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Ç–≤–æ–µ–≥–æ –ª–∏—Ü–∞</strong> ‚Äî –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ —Å–≤–æ–±–æ–¥–∞
              </div>
            </div>
          </div>
        </div>
        
        <!-- Unique Value -->
        <div class="why-value reveal-fade">
          <p class="value-text">
            –≠—Ç–∞ –º–æ–¥–µ–ª—å –¥–∞–µ—Ç —Ç–æ, —á–µ–≥–æ –Ω–µ—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–π –¥—Ä—É–≥–æ–π —Å—Ñ–µ—Ä–µ:
            <strong class="gradient-text">–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å.</strong>
          </p>
        </div>
        
        <!-- Final CTA -->
        <div class="why-cta-block reveal-fade">
          <p class="cta-question">–•–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</p>
          <p class="cta-action">
            –ü—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä—É–π –º–æ—é —Å–∏—Å—Ç–µ–º—É –∏ —Å–æ–∑–¥–∞–π —Å–≤–æ—é AI-–º–æ–¥–µ–ª—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!<br/>
            –∏ –ø–æ–ª—É—á–∞–π –¥–æ—Ö–æ–¥ —É–∂–µ –≤ –ø–µ—Ä–≤—ã–π –º–µ—Å—è—Ü —Å –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ —Ç–µ–±—è.
          </p>
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- Final CTA -->
  <section class="final-cta-section">
    <div class="container">
        
        <!-- TG Preview -->
        <div class="final-tg-preview reveal-scale">
          <div class="tg-photo-box">
            <span class="tg-emoji">üì±</span>
          </div>
          <p class="tg-label">Telegram –∫–∞–Ω–∞–ª</p>
        </div>
        
        <div class="final-main reveal-fade">
          
          <div class="fire-badge">üî• –ù–ê–ß–ù–ò –ü–†–Ø–ú–û –°–ï–ô–ß–ê–°</div>
          
          <h2 class="final-h1">
            –ò–∑—É—á–∞–π AI-–º–æ–¥–µ–ª–∏ –∏ –≤—ã—Ö–æ–¥–∏ –Ω–∞ –ø–µ—Ä–≤—ã–µ <span class="gradient-text">$1000</span>
          </h2>
          
          <!-- Steps Block -->
          <div class="steps-block">
            <div class="step-line">
              <span class="step-num">1</span>
              <p class="step-text">–ü–µ—Ä–µ—Ö–æ–¥–∏ –≤ –º–æ–π –¢–ì –∫–∞–Ω–∞–ª</p>
            </div>
            <div class="arrow-down">‚Üì</div>
            <div class="step-line">
              <span class="step-num">2</span>
              <p class="step-text">–ù–∞–∂–º–∏ <strong>–ù–ê–í–ò–ì–ê–¶–ò–Ø</strong></p>
            </div>
            <div class="arrow-down">‚Üì</div>
            <div class="step-line">
              <span class="step-num">3</span>
              <p class="step-text">–ü–æ–ª—É—á–∏ –≤—Å—é —Å–∏—Å—Ç–µ–º—É</p>
            </div>
          </div>
          
          <!-- Info + CTA above benefits -->
          <p class="info-line">
            –í—Å—è –±–∞–∑–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è AI-–º–æ–¥–µ–ª–µ–π –≤–Ω—É—Ç—Ä–∏
          </p>
          
          <div class="final-btn-group">
            <a href="https://t.me/+-H7bNyi6NihhM2Fk" class="btn-capsule" data-cta data-href="https://t.me/+-H7bNyi6NihhM2Fk" aria-label="–í—Å—Ç—É–ø–∏—Ç—å –≤ Telegram –∫–∞–Ω–∞–ª AI Model 2.0">
              –í—Å—Ç—É–ø–∏—Ç—å ‚úÖ
            </a>
          </div>
          
          <!-- Benefits Block -->
          <div class="benefits-block">
            <div class="benefit-row">
              <span class="check-icon">‚úì</span>
              <span class="benefit-label">–ü—Ä–æ—Ñ–µ—Å—Å–∏—è –±—É–¥—É—â–µ–≥–æ</span>
            </div>
            <div class="benefit-row">
              <span class="check-icon">‚úì</span>
              <span class="benefit-label">–û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤</span>
            </div>
            <div class="benefit-row">
              <span class="check-icon">‚úì</span>
              <span class="benefit-label">–ü–æ—à–∞–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞</span>
            </div>
          </div>
          
          <div class="urgency-bar">
            <p class="urgency-p">‚ö° –ù–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π ‚Äî —Å—Å—ã–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è</p>
            <p class="waiting-p">–ñ–¥—É —Ç–µ–±—è –≤–Ω—É—Ç—Ä–∏ üëã</p>
          </div>
          
          <div class="final-btn-group">
            <a href="https://t.me/+-H7bNyi6NihhM2Fk" class="btn-capsule btn-outline" data-cta data-href="https://t.me/+-H7bNyi6NihhM2Fk" aria-label="–û—Ç–∫—Ä—ã—Ç—å Telegram –∫–∞–Ω–∞–ª –∏ –≤–æ—Ä–≤–∞—Ç—å—Å—è –≤ –Ω–æ–≤—É—é –Ω–∏—à—É">
              –í–æ—Ä–≤–∞—Ç—å—Å—è –≤ –Ω–æ–≤—É—é –Ω–∏—à—É üí∞
            </a>
          </div>
          
        </div>
        
      </div>
    </div>
  </section>
  
  <!-- Earnings Ticker Widget -->
  <EarningsTicker />
  
  {DEBUG_MODE && (
    <script is:inline>
      // Professional Telegram WebApp Debugger
      (function() {
        const panel = document.getElementById('tg-debug-log');
        if (!panel) return;
        
        const logs = [];
        const startTime = Date.now();
        
        function getTimestamp() {
          const elapsed = Date.now() - startTime;
          return `+${elapsed}ms`;
        }
        
        function addDebugLog(msg, type = 'info') {
          const colors = {
            info: '#0f0',
            success: '#0ff',
            warn: '#ff0',
            error: '#f00',
            event: '#f0f'
          };
          
          const timestamp = getTimestamp();
          const color = colors[type] || colors.info;
          const entry = `<div style="color: ${color};">[${timestamp}] ${msg}</div>`;
          logs.push(entry);
          
          if (panel) {
            panel.innerHTML = logs.slice(-30).join('');
            panel.scrollTop = panel.scrollHeight;
          }
        }
        
        // Expose globally
        window.debugLog = addDebugLog;
        
        // Intercept console methods
        const originalLog = console.log;
        const originalWarn = console.warn;
        const originalError = console.error;
        
        console.log = function(...args) {
          const msg = args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' ');
          addDebugLog(msg, 'info');
          originalLog.apply(console, args);
        };
        
        console.warn = function(...args) {
          const msg = args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' ');
          addDebugLog('‚ö†Ô∏è ' + msg, 'warn');
          originalWarn.apply(console, args);
        };
        
        console.error = function(...args) {
          const msg = args.map(a => typeof a === 'object' ? JSON.stringify(a) : String(a)).join(' ');
          addDebugLog('‚ùå ' + msg, 'error');
          originalError.apply(console, args);
        };
        
        function updateStatus(text, color = '#ff0') {
          const statusText = document.getElementById('tg-status-text');
          if (statusText) {
            statusText.textContent = text;
            statusText.style.color = color;
          }
        }
        
        // Copy logs function
        window.copyDebugLogs = function() {
          const logsText = logs.map(log => {
            // Remove HTML tags
            return log.replace(/<[^>]*>/g, '');
          }).join('\n');
          
          // Copy to clipboard
          if (navigator.clipboard) {
            navigator.clipboard.writeText(logsText).then(() => {
              addDebugLog('üìã Logs copied to clipboard!', 'success');
              setTimeout(() => {
                const lastLog = document.querySelector('#tg-debug-log > div:last-child');
                if (lastLog) lastLog.style.backgroundColor = 'rgba(0,255,0,0.2)';
              }, 10);
            }).catch(err => {
              addDebugLog('‚ùå Failed to copy: ' + err.message, 'error');
            });
          } else {
            addDebugLog('‚ùå Clipboard API not available', 'error');
          }
        };
        
        // Test functions for buttons
        window.testFullscreen = function() {
          const tg = window.Telegram?.WebApp;
          if (!tg) {
            addDebugLog('‚ùå Telegram WebApp not available', 'error');
            return;
          }
          
          addDebugLog('üß™ Testing fullscreen...', 'event');
          addDebugLog(`Current isFullscreen: ${tg.isFullscreen}`, 'info');
          
          if (typeof tg.requestFullscreen === 'function') {
            try {
              tg.requestFullscreen();
              addDebugLog('‚úÖ requestFullscreen() called', 'success');
              setTimeout(() => {
                addDebugLog(`Result isFullscreen: ${tg.isFullscreen}`, tg.isFullscreen ? 'success' : 'warn');
                updateStatus(tg.isFullscreen ? '‚úÖ Fullscreen Active' : '‚ö†Ô∏è Fullscreen Failed', tg.isFullscreen ? '#0f0' : '#ff0');
              }, 500);
            } catch (e) {
              addDebugLog(`‚ùå Error: ${e.message}`, 'error');
            }
          } else {
            addDebugLog('‚ùå requestFullscreen not available (need Bot API 8.0+)', 'error');
          }
        };
        
        window.testSwipes = function() {
          const tg = window.Telegram?.WebApp;
          if (!tg) {
            addDebugLog('‚ùå Telegram WebApp not available', 'error');
            return;
          }
          
          addDebugLog('üß™ Testing vertical swipes...', 'event');
          addDebugLog(`Current isVerticalSwipesEnabled: ${tg.isVerticalSwipesEnabled}`, 'info');
          
          if (typeof tg.disableVerticalSwipes === 'function') {
            try {
              tg.disableVerticalSwipes();
              addDebugLog('‚úÖ disableVerticalSwipes() called', 'success');
              setTimeout(() => {
                addDebugLog(`Result isVerticalSwipesEnabled: ${tg.isVerticalSwipesEnabled}`, !tg.isVerticalSwipesEnabled ? 'success' : 'warn');
              }, 200);
            } catch (e) {
              addDebugLog(`‚ùå Error: ${e.message}`, 'error');
            }
          } else {
            addDebugLog('‚ùå disableVerticalSwipes not available (need Bot API 7.7+)', 'error');
          }
        };
        
        // Monitor Telegram WebApp initialization
        addDebugLog('üîç Debug panel initialized', 'success');
        addDebugLog('Waiting for Telegram WebApp...', 'info');
        updateStatus('Searching for Telegram WebApp...', '#ff0');
        
        let checkCount = 0;
        const checkInterval = setInterval(() => {
          checkCount++;
          
          if (window.Telegram?.WebApp) {
            clearInterval(checkInterval);
            const tg = window.Telegram.WebApp;
            
            addDebugLog(`‚úÖ Telegram WebApp found after ${checkCount} checks (${checkCount * 100}ms)`, 'success');
            addDebugLog(`üì± Version: ${tg.version} | Platform: ${tg.platform} | Scheme: ${tg.colorScheme}`, 'info');
            addDebugLog(`üìè isExpanded: ${tg.isExpanded} | Height: ${tg.viewportHeight}px`, 'info');
            updateStatus(`Found v${tg.version} on ${tg.platform}`, '#0ff');
            
            // Intercept Telegram WebApp methods to track Base.astro calls
            const originalReady = tg.ready;
            const originalExpand = tg.expand;
            const originalRequestFullscreen = tg.requestFullscreen;
            const originalDisableVerticalSwipes = tg.disableVerticalSwipes;
            
            tg.ready = function() {
              addDebugLog('üîµ [Base.astro] ready() called', 'info');
              return originalReady.call(this);
            };
            
            tg.expand = function() {
              addDebugLog('üîµ [Base.astro] expand() called', 'info');
              return originalExpand.call(this);
            };
            
            if (originalRequestFullscreen) {
              tg.requestFullscreen = function() {
                addDebugLog('üîµ [Base.astro] requestFullscreen() called', 'info');
                return originalRequestFullscreen.call(this);
              };
            }
            
            if (originalDisableVerticalSwipes) {
              tg.disableVerticalSwipes = function() {
                addDebugLog('üîµ [Base.astro] disableVerticalSwipes() called', 'info');
                return originalDisableVerticalSwipes.call(this);
              };
            }
            
            // Monitor initialization from Base.astro
            addDebugLog('üîç Intercepting method calls, waiting for Base.astro init...', 'info');
            
            // Check state after delay
            setTimeout(() => {
              addDebugLog(`--- FINAL STATE CHECK (after 1.5s) ---`, 'event');
              addDebugLog(`‚úì ready() called: ${tg.isReady !== undefined ? 'yes' : 'unknown'}`, 'info');
              addDebugLog(`‚úì isExpanded: ${tg.isExpanded}`, tg.isExpanded ? 'success' : 'warn');
              addDebugLog(`‚úì isFullscreen: ${tg.isFullscreen}`, tg.isFullscreen ? 'success' : 'warn');
              addDebugLog(`‚úì isVerticalSwipesEnabled: ${tg.isVerticalSwipesEnabled}`, !tg.isVerticalSwipesEnabled ? 'success' : 'warn');
              
              // Update overall status
              if (tg.isFullscreen && !tg.isVerticalSwipesEnabled) {
                updateStatus('‚úÖ ALL SYSTEMS GO', '#0f0');
              } else {
                const issues = [];
                if (!tg.isFullscreen) issues.push('No Fullscreen');
                if (tg.isVerticalSwipesEnabled) issues.push('Swipes Enabled');
                updateStatus(`‚ö†Ô∏è Issues: ${issues.join(', ')}`, '#f80');
                
                // Auto-fix attempt
                addDebugLog('üîß Attempting auto-fix...', 'warn');
                if (!tg.isFullscreen && typeof tg.requestFullscreen === 'function') {
                  try {
                    tg.requestFullscreen();
                    addDebugLog('Auto-fix: requestFullscreen() called', 'info');
                  } catch (e) {
                    addDebugLog(`Auto-fix failed: ${e.message}`, 'error');
                  }
                }
                if (tg.isVerticalSwipesEnabled && typeof tg.disableVerticalSwipes === 'function') {
                  try {
                    tg.disableVerticalSwipes();
                    addDebugLog('Auto-fix: disableVerticalSwipes() called', 'info');
                  } catch (e) {
                    addDebugLog(`Auto-fix failed: ${e.message}`, 'error');
                  }
                }
              }
            }, 1500);
            
          } else if (checkCount >= 50) {
            clearInterval(checkInterval);
            addDebugLog('‚ùå Telegram WebApp NOT FOUND after 5 seconds', 'error');
            addDebugLog('‚ö†Ô∏è Running in browser mode (not in Telegram)', 'warn');
            updateStatus('‚ùå Not in Telegram', '#f00');
          }
        }, 100);
        
        // Monitor document ready state
        addDebugLog(`üìÑ Document state: ${document.readyState}`, 'info');
        
        let domContentLoadedFired = false;
        let windowLoadFired = false;
        
        document.addEventListener('DOMContentLoaded', () => {
          domContentLoadedFired = true;
          addDebugLog('üìÑ DOMContentLoaded fired', 'event');
        });
        
        window.addEventListener('load', () => {
          windowLoadFired = true;
          addDebugLog('üìÑ window.load fired', 'event');
          addDebugLog('üîç Base.astro init should run now (if readyState was not complete earlier)', 'info');
        });
        
        // Monitor for delayed init issues
        setTimeout(() => {
          if (!domContentLoadedFired && !windowLoadFired) {
            addDebugLog('‚ö†Ô∏è Neither DOMContentLoaded nor window.load fired yet!', 'warn');
          }
        }, 3000);
        
      })();
    </script>
  )}
  
</Base>

<script>
  // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Å—Ä–µ–¥–Ω—é—é –∫–∞—Ä—Ç–æ—á–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º DOM)
  const domReadyHandler = () => {
    try {
      // Cache DOM query
      const proofRow = document.querySelector('.proof-row');
      if (proofRow) {
        const proofItems = proofRow.querySelectorAll('.proof-item');
        if (proofItems.length >= 2) {
          // –°–∫—Ä–æ–ª–ª–∏–º –∫–æ –≤—Ç–æ—Ä–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è - AI –º–æ–¥–µ–ª—å)
          const centerItem = proofItems[1];
          const scrollTimeout = setTimeout(() => {
            try {
              centerItem.scrollIntoView({
                behavior: 'auto',
                block: 'nearest',
                inline: 'center'
              });
            } catch (e) {
              // Silently fail
            }
          }, 100);
          
          // Cleanup on unload
          window.addEventListener('beforeunload', () => {
            clearTimeout(scrollTimeout);
          }, { once: true });
        }
      }
    } catch (e) {
      // Silently fail
    }
  };
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', domReadyHandler, { once: true });
  } else {
    domReadyHandler();
  }
  
  // Optimize lazy-loaded images to prevent white flash
  function initLazyImages() {
    try {
      const lazyImages = document.querySelectorAll('img[loading="lazy"]');
      
      if ('IntersectionObserver' in window) {
        const imageObserver = new IntersectionObserver((entries, observer) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const img = entry.target as HTMLImageElement;
              
              // If image is already loaded, show it immediately
              if (img.complete && img.naturalHeight !== 0) {
                img.classList.add('loaded');
                observer.unobserve(img);
              } else {
                // Wait for image to load
                img.addEventListener('load', () => {
                  img.classList.add('loaded');
                }, { once: true });
                
                img.addEventListener('error', () => {
                  // Handle error - still show image to prevent white space
                  img.classList.add('loaded');
                }, { once: true });
              }
              
              observer.unobserve(img);
            }
          });
        }, {
          rootMargin: '50px' // Start loading images 50px before they enter viewport
        });
        
        lazyImages.forEach(img => imageObserver.observe(img));
      } else {
        // Fallback: show all images immediately
        lazyImages.forEach(img => {
          (img as HTMLImageElement).classList.add('loaded');
        });
      }
    } catch (e) {
      // Silently fail
    }
  }
  
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLazyImages, { once: true });
  } else {
    initLazyImages();
  }
</script>

<style>
  /* === GLOBAL BACKGROUND === */
  body {
    position: relative;
    overflow-x: hidden;
  }
  
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* Base dark background to prevent white flash */
    background-color: #0a0a0a;
    background-image: 
      radial-gradient(ellipse at 20% 30%, rgba(96, 165, 250, 0.15) 0%, transparent 50%),
      radial-gradient(ellipse at 80% 70%, rgba(168, 85, 247, 0.12) 0%, transparent 50%),
      radial-gradient(ellipse at 40% 90%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),
      radial-gradient(ellipse at 70% 10%, rgba(249, 115, 22, 0.08) 0%, transparent 50%);
    z-index: 0;
    pointer-events: none;
    /* Ensure it covers entire viewport even during fast scroll */
    min-height: 100vh;
    will-change: transform;
  }
  
  body > * {
    position: relative;
    z-index: 1;
  }
  
  /* === GLOBAL CONTAINER === */
  .container {
    width: 100%;
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  @media (min-width: 640px) {
    .container {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .container {
      padding-left: 2rem;
      padding-right: 2rem;
    }
  }
  
  @media (min-width: 1280px) {
    .container {
      padding-left: 2.5rem;
      padding-right: 2.5rem;
    }
  }
  
  /* === SECTION STYLES === */
  section {
    position: relative;
    width: 100%;
    /* Ensure sections don't overflow */
    overflow-x: hidden;
  }
  
  /* Center all section content on desktop */
  @media (min-width: 1024px) {
    section > * {
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto;
    }
  }
  
  section::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 90%;
    max-width: 1100px;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(96, 165, 250, 0.3) 20%,
      rgba(96, 165, 250, 0.3) 80%,
      transparent
    );
  }
  
  section:last-of-type::after {
    display: none;
  }
  
  /* === ANIMATED GRADIENT BACKGROUND === */
  .hero-section {
    background: transparent;
    padding: 3rem 0;
    position: relative;
    overflow: hidden;
  }
  
  @media (min-width: 1024px) {
    .hero-section {
      padding: 5rem 0;
    }
  }
  
  .hero-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at 20% 50%, rgba(96, 165, 250, 0.15), transparent 50%),
                radial-gradient(circle at 80% 80%, rgba(34, 211, 238, 0.1), transparent 50%);
    pointer-events: none;
  }
  
  @keyframes gradient-animation {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
  }
  
  .hero-section > div {
    position: relative;
    z-index: 1;
  }
  
  /* === TYPOGRAPHY === */
  .hero-title {
    font-size: clamp(1.75rem, 6vw, 3.5rem);
    font-weight: 800;
    line-height: 1.15;
    margin: 1.5rem auto;
    color: var(--fg);
    text-align: center;
    max-width: 900px;
  }
  
  .hero-text {
    font-size: clamp(1rem, 3vw, 1.25rem);
    color: #b3b3b3;
    line-height: 1.7;
    margin: 1.25rem auto;
    max-width: 700px;
    text-align: center;
    padding: 0 1rem;
  }
  
  /* === PAIN CARDS === */
  .pain-cards {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin: 2rem auto;
    max-width: 800px;
  }
  
  .pain-card {
    background: rgba(168, 85, 247, 0.08);
    border: 1px solid rgba(168, 85, 247, 0.2);
    border-radius: 16px;
    padding: 1rem 1.25rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    transition: all 0.3s ease;
    text-align: left;
    box-shadow: 0 4px 12px rgba(168, 85, 247, 0.1);
  }
  
  .pain-card:hover {
    border-color: rgba(168, 85, 247, 0.4);
    background: rgba(168, 85, 247, 0.12);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(168, 85, 247, 0.2);
  }
  
  .pain-card-icon {
    font-size: clamp(1.75rem, 4vw, 2rem);
    flex-shrink: 0;
    filter: drop-shadow(0 0 8px rgba(168, 85, 247, 0.6));
    animation: float 3s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-4px); }
  }
  
  .pain-card-content {
    flex: 1;
  }
  
  .pain-card-title {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 0.25rem;
  }
  
  .pain-card-desc {
    font-size: clamp(0.875rem, 2vw, 0.9375rem);
    color: #b3b3b3;
    line-height: 1.5;
    display: none;
  }
  
  @media (min-width: 640px) {
    .pain-card-desc {
      display: block;
    }
  }
  
  /* === PROOF ROW - HORIZONTAL SOCIAL PROOF === */
  .proof-row {
    display: flex;
    gap: 1.5rem;
    margin: 3rem -1rem;
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    scroll-snap-stop: always;
    -webkit-overflow-scrolling: touch;
    padding: 0 1rem 1rem;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }
  
  .proof-row::-webkit-scrollbar {
    display: none;
  }
  
  /* Desktop: Center and show all */
  @media (min-width: 768px) {
    .proof-row {
      justify-content: center;
      overflow-x: visible;
      margin: 3rem auto;
      padding: 0;
      gap: 2rem;
    }
  }
  
  .proof-item {
    flex: 0 0 auto;
    width: 75%;
    max-width: 300px;
    text-align: center;
    scroll-snap-align: center;
    scroll-snap-stop: always;
  }
  
  /* –ù–∞ –ø–ª–∞–Ω—à–µ—Ç–∞—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–∞—Ö */
  @media (min-width: 768px) {
    .proof-item {
      flex: 1;
      width: auto;
      max-width: 280px;
    }
  }
  
  .proof-image-placeholder {
    background: rgba(255, 255, 255, 0.05);
    border: 2px dashed rgba(96, 165, 250, 0.5);
    border-radius: var(--radius-xl);
    padding: 2.5rem 2rem;
    aspect-ratio: 4/3;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }
  
  @media (min-width: 768px) {
    .proof-image-placeholder {
      padding: 3rem 2rem;
    }
  }
  
  .proof-image-placeholder::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.1), rgba(34, 211, 238, 0.05));
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .proof-image-placeholder:hover {
    border-color: var(--primary);
    transform: translateY(-1px);
    box-shadow: 0 12px 40px rgba(96, 165, 250, 0.25);
  }
  
  .proof-image-placeholder:hover::before {
    opacity: 1;
  }
  
  .proof-image-icon {
    font-size: clamp(3rem, 7vw, 4rem);
    position: relative;
    z-index: 1;
  }
  
  .proof-caption {
    font-size: clamp(0.875rem, 2vw, 1rem);
    color: #60a5fa;
    font-weight: 700;
    margin-top: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  /* === HERO DIVIDER === */
  .hero-divider {
    height: 2px;
    background: linear-gradient(90deg, transparent, rgba(96, 165, 250, 0.5), transparent);
    margin: 4rem 0;
  }
  
  /* === PAIN SECTION === */
  .pain-section {
    text-align: center;
    margin: 3rem 0;
  }
  
  .pain-title {
    font-size: clamp(1.5rem, 4vw, 2.25rem);
    font-weight: 800;
    color: var(--fg);
    margin-bottom: 1.5rem;
  }
  
  .pain-text {
    font-size: clamp(1rem, 2.5vw, 1.25rem);
    color: #b3b3b3;
    line-height: 1.7;
    margin: 1.5rem auto;
    max-width: 700px;
  }
  
  /* === OLD ATTEMPTS ROW - HORIZONTAL === */
  .old-attempts-row {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    margin: 2rem auto;
    flex-wrap: wrap;
  }
  
  @media (min-width: 768px) {
    .old-attempts-row {
      gap: 1.5rem;
    }
  }
  
  .old-attempt-item {
    background: rgba(255, 255, 255, 0.02);
    border: 2px dashed rgba(156, 163, 175, 0.4);
    border-radius: var(--radius-lg);
    padding: 1rem 1.5rem;
    text-align: center;
    transition: all 0.3s ease;
    min-width: 100px;
    opacity: 0.7;
  }
  
  .old-attempt-item:hover {
    opacity: 1;
    border-color: rgba(239, 68, 68, 0.5);
    transform: translateY(-2px);
  }
  
  .old-icon {
    font-size: clamp(2rem, 5vw, 2.5rem);
    display: block;
    margin-bottom: 0.5rem;
    filter: grayscale(0.8);
  }
  
  .old-label {
    font-size: clamp(0.75rem, 2vw, 0.875rem);
    color: #9ca3af;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  /* === SOLUTION SECTION === */
  .solution-section {
    text-align: center;
    margin: 3rem 0 2rem;
  }
  
  .solution-intro-text {
    margin-bottom: 2rem;
  }
  
  .solution-big-title {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 900;
    color: #ffffff;
    margin-bottom: 1.5rem;
    letter-spacing: -0.02em;
    line-height: 1.1;
  }
  
  .solution-description {
    font-size: clamp(1.125rem, 2.5vw, 1.375rem);
    color: #d1d5db;
    line-height: 1.75;
    max-width: 800px;
    margin: 0 auto;
    font-weight: 400;
  }
  
  .solution-hero-card {
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.15), rgba(34, 211, 238, 0.1));
    border: 1px solid rgba(96, 165, 250, 0.3);
    border-radius: var(--radius-2xl);
    padding: 2rem 1.5rem;
    margin: 2rem auto;
    max-width: 550px;
    position: relative;
    overflow: hidden;
    /* Prevent card stretching */
    height: auto;
    min-height: 0;
  }
  
  /* Small screens - fix stretching and line breaks */
  @media (max-width: 445px) {
    .solution-hero-card {
      padding: 1.5rem 1.25rem;
      margin: 1.5rem auto;
      max-width: calc(100% - 2rem);
    }
  }
  
  @media (min-width: 768px) {
    .solution-hero-card {
      padding: 2.5rem 2rem;
    }
  }
  
  .solution-hero-card::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(96, 165, 250, 0.1), transparent 60%);
    animation: rotate 20s linear infinite;
  }
  
  .solution-badge {
    display: inline-block;
    background: rgba(249, 115, 22, 0.15);
    color: #fb923c;
    padding: 0.625rem 1.25rem;
    border-radius: 9999px;
    font-size: clamp(0.75rem, 2vw, 1rem);
    font-weight: 700;
    margin-bottom: 1.5rem;
    position: relative;
    z-index: 1;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    filter: drop-shadow(0 2px 8px rgba(249, 115, 22, 0.3));
    white-space: nowrap;
  }
  
  /* Small screens - adjust badge */
  @media (max-width: 445px) {
    .solution-badge {
      padding: 0.5rem 1rem;
      font-size: clamp(0.6875rem, 2.2vw, 0.875rem);
      margin-bottom: 1.25rem;
      /* Allow wrapping only if absolutely necessary */
      white-space: normal;
      max-width: 100%;
    }
  }
  
  .solution-hero-title {
    font-size: clamp(1.75rem, 5vw, 3.5rem);
    font-weight: 900;
    color: #ffffff;
    margin-bottom: 1.25rem;
    position: relative;
    z-index: 1;
    letter-spacing: -0.02em;
    line-height: 1.15;
    /* Prevent awkward line breaks */
    word-break: keep-all;
    overflow-wrap: break-word;
    hyphens: none;
  }
  
  /* Small screens - better control over line breaks */
  @media (max-width: 445px) {
    .solution-hero-title {
      font-size: clamp(1.5rem, 6vw, 2.25rem);
      line-height: 1.2;
      margin-bottom: 1rem;
      /* Force better word wrapping */
      word-break: normal;
      overflow-wrap: anywhere;
    }
  }
  
  /* Subtle glow effect on gradient text */
  .solution-hero-title .gradient-text {
    /* Use system fonts for better cyrillic/latin balance */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-weight: 900 !important;
    font-style: normal !important;
    letter-spacing: inherit;
    font-synthesis: none;
    font-variant-numeric: normal !important;
    font-variant-ligatures: none !important;
    font-feature-settings: normal !important;
    text-rendering: optimizeLegibility;
    position: relative;
    filter: drop-shadow(0 0 20px rgba(96, 165, 250, 0.4));
  }
  
  .solution-hero-subtitle {
    font-size: clamp(1.125rem, 3vw, 1.625rem);
    color: #e5e5e5;
    line-height: 1.6;
    position: relative;
    z-index: 1;
    font-weight: 400;
    margin-top: 0.5rem;
    letter-spacing: -0.01em;
    /* Better text wrapping */
    word-break: normal;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  
  /* Small screens - prevent stretching */
  @media (max-width: 445px) {
    .solution-hero-subtitle {
      font-size: clamp(1rem, 3.5vw, 1.375rem);
      line-height: 1.5;
      margin-top: 0.75rem;
      /* Improve line breaks on very small screens */
      overflow-wrap: anywhere;
      hyphens: manual;
    }
  }
  
  .solution-promise-card {
    background: rgba(34, 211, 238, 0.05);
    border-left: 4px solid var(--primary);
    border-radius: var(--radius-xl);
    padding: 1.5rem;
    margin: 2rem auto;
    max-width: 550px;
    text-align: left;
    /* Prevent card stretching */
    height: auto;
    min-height: 0;
  }
  
  /* Small screens - fix stretching */
  @media (max-width: 445px) {
    .solution-promise-card {
      padding: 1.25rem 1rem;
      margin: 1.5rem auto;
      max-width: calc(100% - 2rem);
    }
  }
  
  @media (min-width: 768px) {
    .solution-promise-card {
      padding: 2rem;
    }
  }
  
  .promise-label {
    font-size: clamp(1rem, 2.2vw, 1.5rem);
    color: var(--primary);
    font-weight: 800;
    margin-bottom: 1.25rem;
    margin-top: 0.5rem;
    letter-spacing: -0.01em;
    filter: drop-shadow(0 2px 12px rgba(96, 165, 250, 0.3));
    display: inline-block;
    word-break: normal;
    overflow-wrap: break-word;
  }
  
  /* Small screens - adjust label */
  @media (max-width: 445px) {
    .promise-label {
      font-size: clamp(0.9375rem, 2.5vw, 1.25rem);
      margin-bottom: 1rem;
    }
  }
  
  .promise-text {
    font-size: clamp(1rem, 2.5vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.65;
    font-weight: 400;
    letter-spacing: -0.005em;
    /* Better text wrapping */
    word-break: normal;
    overflow-wrap: break-word;
    hyphens: auto;
  }
  
  /* Small screens - prevent awkward line breaks */
  @media (max-width: 445px) {
    .promise-text {
      font-size: clamp(0.9375rem, 3vw, 1.125rem);
      line-height: 1.6;
      /* Improve wrapping on very small screens */
      overflow-wrap: anywhere;
      hyphens: manual;
    }
  }
  
  /* Enhance highlighted text in promise */
  .promise-text strong.gradient-text {
    font-weight: 700 !important;
    /* Use system fonts for uniform appearance */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-style: normal !important;
    font-variant-numeric: normal !important;
    font-variant-ligatures: none !important;
    font-feature-settings: normal !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    position: relative;
    filter: drop-shadow(0 0 10px rgba(96, 165, 250, 0.4));
  }
  
  .promise-text strong:not(.gradient-text) {
    font-weight: 600;
    color: #d1d5db;
  }
  
  /* === MOBILE PADDING === */
  @media (min-width: 768px) {
    .hero-section {
      padding: 5rem 2rem;
    }
  }
  
  /* === BADGE === */
  .badge-cymbal {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1.5rem;
    background: rgba(96, 165, 250, 0.1);
    border: 1px solid rgba(96, 165, 250, 0.3);
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 600;
    color: #60a5fa;
  }
  
  .badge-dot {
    width: 8px;
    height: 8px;
    background: #60a5fa;
    border-radius: 50%;
    animation: pulse 2s ease-in-out infinite;
  }
  
  @keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
  
  /* Single Pulsing Dot Badge */
  .single-dot-badge {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    background: rgba(96, 165, 250, 0.1);
    border: 1px solid rgba(96, 165, 250, 0.3);
    border-radius: 50%;
  }
  
  .pulsing-dot {
    width: 12px;
    height: 12px;
    background: #60a5fa;
    border-radius: 50%;
    animation: pulse 2s ease-in-out infinite;
  }
  
  /* === ABOUT SECTION === */
  .about-section {
    padding: 3rem 0;
  }
  
  @media (min-width: 1024px) {
    .about-section {
      padding: 5rem 0;
    }
  }
  
  /* Founder Header */
  .founder-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    margin-bottom: 3rem;
  }
  
  .founder-avatar {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
  }
  
  .founder-name-block {
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .founder-name {
    font-size: 1.75rem;
    font-weight: 700;
    color: #ffffff;
    letter-spacing: -0.01em;
  }
  
  .founder-role {
    font-size: 0.9375rem;
    color: rgba(255, 255, 255, 0.6);
    font-weight: 500;
  }
  
  .photo-circle {
    width: 140px;
    height: 140px;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.15), rgba(34, 211, 238, 0.1));
    border: 3px solid rgba(96, 165, 250, 0.4);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.4s ease;
    box-shadow: 0 8px 32px rgba(96, 165, 250, 0.15);
    position: relative;
  }
  
  .photo-circle::before {
    content: '';
    position: absolute;
    inset: -3px;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.5), rgba(34, 211, 238, 0.5));
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
    border-radius: 50%;
  }
  
  .avatar-emoji {
    font-size: 4rem;
    position: relative;
    z-index: 1;
  }
  
  .earning-corner {
    position: absolute;
    top: -5px;
    right: -5px;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.2), rgba(34, 211, 238, 0.15));
    border: 2px solid rgba(96, 165, 250, 0.5);
    border-radius: 12px;
    padding: 0.5rem 0.75rem;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 16px rgba(96, 165, 250, 0.3);
    z-index: 2;
  }
  
  .earning-corner .earning-amount {
    font-size: 1.25rem;
    font-weight: 900;
    line-height: 1;
    background: linear-gradient(90deg, #60a5fa, #22d3ee);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.125rem;
    /* Use system fonts for uniform rendering */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-variant-ligatures: none !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
  }
  
  .earning-corner .earning-period {
    font-size: 0.625rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.6);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .founder-avatar:hover .photo-circle {
    transform: scale(1.05);
    box-shadow: 0 12px 40px rgba(96, 165, 250, 0.25);
  }
  
  .founder-avatar:hover .earning-corner {
    transform: scale(1.05);
    box-shadow: 0 6px 20px rgba(96, 165, 250, 0.4);
  }
  
  .photo-name {
    font-size: 0.9375rem;
    font-weight: 600;
  }
  
  /* Earning Badge */
  .earning-badge {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    padding: 1.5rem 2rem;
    background: rgba(15, 15, 20, 0.6);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: 20px;
    transition: all 0.4s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
    position: relative;
    overflow: hidden;
    min-width: 160px;
    transform: translateY(-30px);
  }
  
  .earning-badge::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--primary), var(--primary-2));
    z-index: 1;
  }
  
  .earning-badge:hover {
    border-color: rgba(96, 165, 250, 0.4);
    box-shadow: 0 8px 32px rgba(96, 165, 250, 0.15);
    transform: translateY(-2px);
  }
  
  .earning-label {
    font-size: 0.75rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.5);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    position: relative;
    z-index: 2;
  }
  
  .earning-amount {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    font-weight: 900;
    line-height: 1;
    background: linear-gradient(90deg, #60a5fa, #22d3ee);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    letter-spacing: -0.02em;
    position: relative;
    z-index: 2;
    /* Use system fonts for uniform rendering */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-variant-ligatures: none !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
  }
  
  .earning-period {
    font-size: 0.75rem;
    font-weight: 500;
    color: rgba(255, 255, 255, 0.4);
    position: relative;
    z-index: 2;
  }
  
  /* Founder Story */
  .story-intro {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.7;
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .text-green {
    background: linear-gradient(90deg, #22c55e, #16a34a);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    /* Use system fonts for uniform rendering */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-variant-ligatures: none !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    display: inline-block;
  }
  
  .story-para {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.75;
    margin-bottom: 1.5rem;
    /* Consistent line-height with moment-text for visual harmony */
  }
  
  .story-moment {
    margin: 2.5rem 0;
    padding: 1.75rem 1.5rem;
    /* Subtle background - less prominent */
    background: rgba(13, 13, 16, 0.5);
    /* Refined border - thinner, softer */
    border-left: 2px solid rgba(96, 165, 250, 0.4);
    border-radius: var(--radius-lg);
    /* Subtle shadow for depth without heaviness */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1), inset 0 1px 0 rgba(96, 165, 250, 0.05);
    /* Smooth transition for better integration */
    transition: all 0.3s ease;
  }
  
  /* Hover effect for interactivity (optional, subtle) */
  .story-moment:hover {
    border-left-color: rgba(96, 165, 250, 0.6);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15), inset 0 1px 0 rgba(96, 165, 250, 0.08);
  }
  
  .moment-text {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.75;
    margin-bottom: 1.25rem;
    /* Consistent with story-para for unity */
  }
  
  .moment-quote {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    /* Softer gradient - less aggressive */
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.95) 0%, rgba(34, 211, 238, 0.95) 100%);
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    /* Less bold for better readability */
    font-weight: 600;
    font-style: normal; /* Remove italic for cleaner look */
    line-height: 1.7;
    margin: 1.25rem 0;
    padding: 0;
    border: none;
    /* Subtle text shadow for depth */
    filter: drop-shadow(0 1px 2px rgba(96, 165, 250, 0.2));
    /* Improve readability */
    letter-spacing: 0.01em;
  }
  
  .moment-result {
    font-size: clamp(1.0625rem, 2.5vw, 1.1875rem);
    /* Less bold result text for better flow */
    color: rgba(245, 245, 245, 0.9);
    font-weight: 600;
    margin-top: 1.25rem;
    /* Subtle emphasis without being too heavy */
    letter-spacing: 0.02em;
  }
  
  .story-stats {
    margin: 2.5rem 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .stat-line {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    background: rgba(15, 15, 20, 0.5);
    border-radius: 16px;
    border: 1px solid rgba(96, 165, 250, 0.15);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }
  
  .stat-line:hover {
    border-color: rgba(96, 165, 250, 0.3);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(96, 165, 250, 0.1);
  }
  
  .stat-line.featured {
    background: rgba(15, 15, 20, 0.5);
    border-color: rgba(34, 197, 94, 0.2);
  }
  
  .stat-line.featured:hover {
    border-color: rgba(34, 197, 94, 0.4);
    box-shadow: 0 8px 24px rgba(34, 197, 94, 0.15);
  }
  
  .stat-label {
    font-size: 1rem;
    color: #9ca3af;
    font-weight: 500;
    letter-spacing: 0.02em;
  }
  
  .stat-value {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    font-weight: 900;
    white-space: nowrap;
    letter-spacing: -0.03em;
    /* Use system fonts for uniform cyrillic/latin rendering */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
  }
  
  .stat-line.featured .stat-value {
    color: #22c55e;
  }
  
  .story-how {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.7;
    font-weight: 600;
    text-align: center;
    margin: 2rem 0;
  }
  
  .story-cta-block {
    margin: 2.5rem 0;
    text-align: center;
    padding: 1.5rem;
    background: rgba(249, 115, 22, 0.05);
    border-radius: var(--radius-xl);
  }
  
  .cta-badge {
    display: inline-block;
    background: linear-gradient(90deg, rgba(249, 115, 22, 0.2), rgba(234, 88, 12, 0.15));
    color: #fb923c;
    padding: 0.5rem 1.25rem;
    border-radius: 9999px;
    font-size: clamp(0.875rem, 2vw, 1rem);
    font-weight: 700;
    margin-bottom: 1rem;
  }
  
  .cta-text {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.7;
  }
  
  /* === WHAT SECTION === */
  .what-section {
    padding: 3rem 0;
  }
  
  @media (min-width: 1024px) {
    .what-section {
      padding: 5rem 0;
    }
  }
  
  /* Models Banner */
  .models-banner {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    margin-bottom: 3rem;
    padding: 2rem 1rem;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.1), rgba(168, 85, 247, 0.08));
    border-radius: var(--radius-2xl);
    border: 1px solid rgba(96, 165, 250, 0.2);
  }
  
  .banner-photo {
    width: 80px;
    height: 80px;
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid rgba(168, 85, 247, 0.4);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2.5rem;
    transition: all 0.3s ease;
  }
  
  @media (min-width: 640px) {
    .banner-photo {
      width: 100px;
      height: 100px;
      font-size: 3rem;
    }
  }
  
  .banner-photo:hover {
    transform: translateY(-4px) scale(1.05);
    border-color: rgba(168, 85, 247, 0.6);
    box-shadow: 0 10px 30px rgba(168, 85, 247, 0.3);
  }
  
  /* What Intro */
  .what-intro {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .what-headline {
    font-size: clamp(1.75rem, 4vw, 2.5rem);
    font-weight: 900;
    color: var(--fg);
    margin-bottom: 1rem;
  }
  
  .what-desc {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.7;
  }
  
  /* Benefits Section */
  .benefits-section {
    margin: 3rem 0;
  }
  
  .benefits-title {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .benefits-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  .benefit-item {
    display: flex;
    gap: 1.25rem;
    align-items: flex-start;
    padding: 1.25rem;
    background: rgba(96, 165, 250, 0.03);
    border-left: 3px solid var(--primary);
    border-radius: var(--radius-lg);
    transition: all 0.3s ease;
  }
  
  .benefit-item:hover {
    background: rgba(96, 165, 250, 0.05);
    transform: translateX(4px);
  }
  
  .benefit-num {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    flex-shrink: 0;
    background: linear-gradient(135deg, var(--primary), var(--primary-2));
    color: var(--fg);
    font-weight: 900;
    font-size: 1.125rem;
    border-radius: 50%;
  }
  
  .benefit-content {
    flex: 1;
  }
  
  .benefit-name {
    font-size: clamp(1.125rem, 2.5vw, 1.25rem);
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 0.5rem;
  }
  
  .benefit-text {
    font-size: clamp(0.9375rem, 2vw, 1rem);
    color: #b3b3b3;
    line-height: 1.6;
  }
  
  /* Summary */
  .what-summary {
    margin: 3rem 0;
    text-align: center;
  }
  
  .summary-main {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    font-weight: 600;
    line-height: 1.7;
    margin-bottom: 2rem;
  }
  
  .no-hassle {
    display: grid;
    gap: 0.75rem;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .no-item {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    padding: 0.75rem 1rem;
    background: rgba(239, 68, 68, 0.05);
    border-radius: var(--radius-lg);
    border-left: 3px solid rgba(239, 68, 68, 0.4);
    /* Left align with flexbox */
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    text-align: left;
  }
  
  /* Icon container - fixed width for consistent alignment */
  .no-icon {
    flex-shrink: 0;
    width: 1.25em;
    display: inline-block;
    text-align: center;
    color: #ef4444;
    font-size: 1em;
    line-height: 1.5;
  }
  
  /* Text container */
  .no-text {
    flex: 1;
    line-height: 1.5;
  }
  
  /* Final Pitch */
  .final-pitch {
    margin: 3rem 0;
    text-align: center;
    padding: 2rem 1.5rem;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.08), rgba(34, 211, 238, 0.05));
    border-radius: var(--radius-2xl);
  }
  
  .pitch-profession {
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    color: #e5e5e5;
    font-weight: 700;
    margin-bottom: 1rem;
  }
  
  .pitch-formula {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #b3b3b3;
    font-weight: 600;
  }
  
  .what-you-get-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.25rem;
    margin: 2rem 0;
  }
  
  @media (min-width: 640px) {
    .what-you-get-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;
    }
  }
  
  @media (min-width: 1024px) {
    .what-you-get-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 2rem;
      margin: 3rem 0;
    }
  }
  
  .feature-box {
    background: rgba(13, 13, 16, 0.6);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: var(--radius-2xl);
    padding: 2rem 1.5rem;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .feature-box:hover {
    transform: translateY(-4px);
    border-color: var(--primary);
    box-shadow: 0 10px 40px rgba(96, 165, 250, 0.15);
  }
  
  .feature-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }
  
  .feature-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 0.75rem;
  }
  
  .feature-desc {
    color: #b3b3b3;
    font-size: 0.9375rem;
    line-height: 1.6;
  }
  
  .what-you-get-note {
    background: rgba(96, 165, 250, 0.05);
    border-radius: var(--radius-2xl);
    padding: 2rem;
    margin: 3rem 0;
    text-align: center;
  }
  
  .no-list {
    list-style: none;
    padding: 0;
    margin: 1rem 0 0;
    display: inline-block;
    text-align: left;
  }
  
  .no-list li {
    margin: 0.5rem 0;
  }
  
  .what-you-get-cta {
    text-align: center;
  }
  
  .profession-text {
    font-size: 1.25rem;
    margin-bottom: 2rem;
  }
  
  .formula {
    font-size: 1.5rem;
    font-weight: 600;
    display: block;
    margin-top: 0.5rem;
  }
  
  /* === SYSTEM SECTION === */
  .system-section {
    padding: 3rem 0;
  }
  
  @media (min-width: 1024px) {
    .system-section {
      padding: 5rem 0;
    }
  }
  
  /* Students Banner */
  .students-banner {
    display: flex;
    gap: 1.5rem;
    justify-content: flex-start;
    margin-bottom: 3rem;
    flex-wrap: nowrap;
    overflow-x: auto;
    overflow-y: hidden;
    padding: 1rem 0;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
    scroll-snap-type: x mandatory;
    scroll-padding: 0;
  }
  
  .students-banner::-webkit-scrollbar {
    display: none; /* Chrome, Safari, Opera */
  }
  
  @media (max-width: 768px) {
    .students-banner {
      gap: 1rem;
      margin: 0 -1rem 3rem;
      padding: 1rem;
      justify-content: center;
    }
  }
  
  .student-photo {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem;
    background: rgba(15, 15, 20, 0.4);
    border: 1px solid rgba(34, 197, 94, 0.1);
    border-radius: 20px;
    transition: all 0.3s ease;
    scroll-snap-align: center;
    flex-shrink: 0;
  }
  
  .student-photo:hover {
    background: rgba(15, 15, 20, 0.6);
    border-color: rgba(34, 197, 94, 0.2);
    transform: translateY(-4px);
  }
  
  .student-circle {
    width: 100px;
    height: 100px;
    background: rgba(15, 15, 20, 0.6);
    border: 2px solid rgba(34, 197, 94, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 3rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 16px rgba(34, 197, 94, 0.1);
    position: relative;
    overflow: hidden;
  }
  
  .student-circle::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 50%;
    background: radial-gradient(circle at 30% 30%, rgba(34, 197, 94, 0.2), transparent 60%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .student-circle:hover {
    transform: scale(1.08) translateY(-2px);
    border-color: rgba(34, 197, 94, 0.4);
    box-shadow: 0 12px 40px rgba(34, 197, 94, 0.25);
  }
  
  .student-circle:hover::before {
    opacity: 1;
  }
  
  .student-earn {
    font-size: clamp(1.75rem, 4.5vw, 2.25rem);
    font-weight: 900;
    background: linear-gradient(135deg, #22c55e, #10b981, #059669);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    letter-spacing: -0.03em;
    margin-top: 0.5rem;
    text-align: center;
    position: relative;
    /* Use system fonts for uniform rendering */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-variant-ligatures: none !important;
    font-synthesis: none;
    text-rendering: optimizeLegibility;
    animation: gradient-shift 3s ease infinite;
    text-shadow: 0 0 30px rgba(34, 197, 94, 0.5);
  }
  
  @keyframes gradient-shift {
    0%, 100% {
      filter: drop-shadow(0 0 10px rgba(34, 197, 94, 0.4)) brightness(1);
    }
    50% {
      filter: drop-shadow(0 0 20px rgba(34, 197, 94, 0.6)) brightness(1.1);
    }
  }
  
  .student-photo:hover .student-earn {
    animation-duration: 1.5s;
    transform: scale(1.05);
  }
  
  /* System Header */
  .system-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .system-main-title {
    font-size: clamp(1.5rem, 4vw, 2rem);
    font-weight: 800;
    color: var(--fg);
    line-height: 1.4;
  }
  
  /* Vertical Timeline */
  .system-timeline {
    position: relative;
    padding-left: 2rem;
  }
  
  .system-timeline::before {
    content: '';
    position: absolute;
    left: 1.125rem;
    top: 0;
    bottom: 0;
    width: 2px;
    background: linear-gradient(180deg, var(--primary), var(--primary-2));
    opacity: 0.3;
  }
  
  @media (min-width: 640px) {
    .system-timeline {
      padding-left: 3rem;
    }
    
    .system-timeline::before {
      left: 1.625rem;
    }
  }
  
  .timeline-step {
    position: relative;
    margin-bottom: 2rem;
  }
  
  .timeline-step:last-child {
    margin-bottom: 0;
  }
  
  .step-marker {
    position: absolute;
    left: -2rem;
    top: 0;
    width: 42px;
    height: 42px;
    background: linear-gradient(135deg, var(--primary), var(--primary-2));
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(96, 165, 250, 0.4);
    z-index: 1;
  }
  
  @media (min-width: 640px) {
    .step-marker {
      left: -3rem;
      width: 50px;
      height: 50px;
    }
  }
  
  .step-num {
    font-size: 1.25rem;
    font-weight: 900;
    color: var(--fg);
  }
  
  @media (min-width: 640px) {
    .step-num {
      font-size: 1.5rem;
    }
  }
  
  .step-card {
    background: rgba(96, 165, 250, 0.03);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: var(--radius-xl);
    padding: 1.5rem;
    transition: all 0.3s ease;
  }
  
  @media (min-width: 640px) {
    .step-card {
      padding: 2rem;
    }
  }
  
  .step-card:hover {
    background: rgba(96, 165, 250, 0.05);
    border-color: rgba(96, 165, 250, 0.4);
    transform: translateX(4px);
  }
  
  .step-title {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 1rem;
  }
  
  .step-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .step-list li {
    font-size: clamp(0.9375rem, 2vw, 1rem);
    color: #b3b3b3;
    line-height: 1.6;
    padding-left: 0.5rem;
  }
  
  .step-list strong {
    color: var(--fg);
  }
  
  .system-finale {
    margin-top: 3rem;
    text-align: center;
    padding: 2rem 1.5rem;
    background: linear-gradient(135deg, rgba(249, 115, 22, 0.1), rgba(234, 88, 12, 0.08));
    border-radius: var(--radius-2xl);
    border: 1px solid rgba(249, 115, 22, 0.3);
  }
  
  .finale-text {
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    color: #e5e5e5;
    font-weight: 700;
    line-height: 1.5;
  }
  
  .system-number {
    font-size: clamp(1.75rem, 5vw, 2rem);
    flex-shrink: 0;
  }
  
  .system-title {
    font-size: clamp(1.125rem, 3vw, 1.5rem);
    font-weight: 700;
    color: var(--fg);
    margin-bottom: 1rem;
  }
  
  .system-bullets {
    list-style: none;
    padding: 0;
    margin: 0;
  }
  
  .system-bullets li {
    position: relative;
    padding-left: 1.5rem;
    color: #b3b3b3;
    margin: 0.5rem 0;
    line-height: 1.6;
  }
  
  .system-bullets li::before {
    content: '‚úì';
    position: absolute;
    left: 0;
    color: var(--primary);
    font-weight: 700;
  }
  
  .system-cta {
    text-align: center;
    margin-top: 3rem;
  }
  
  /* === WHY NOW SECTION === */
  .why-now-section {
    padding: 3rem 0;
  }
  
  @media (min-width: 1024px) {
    .why-now-section {
      padding: 5rem 0;
    }
  }
  
  /* Why Intro */
  .why-intro {
    margin-bottom: 3rem;
  }
  
  .why-main-title {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 900;
    color: var(--fg);
    margin-bottom: 1.5rem;
  }
  
  .why-para {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #b3b3b3;
    line-height: 1.7;
    margin-bottom: 1.5rem;
  }
  
  .why-standout {
    font-size: clamp(1.375rem, 4vw, 1.75rem);
    color: var(--fg);
    font-weight: 700;
  }
  
  /* Industry Block */
  .why-industry {
    background: rgba(96, 165, 250, 0.05);
    border-left: 3px solid var(--primary);
    border-radius: var(--radius-xl);
    padding: 2rem 1.5rem;
    margin: 3rem 0;
  }
  
  .industry-text {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    margin-bottom: 1.5rem;
  }
  
  .industry-points {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin: 1.5rem 0;
  }
  
  .point-line {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    padding-left: 0.5rem;
  }
  
  .industry-work {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    line-height: 1.7;
    font-weight: 600;
    margin-top: 1.5rem;
  }
  
  /* Niche Visual */
  .niche-visual {
    margin: 3rem 0;
  }
  
  .visual-placeholder {
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.1), rgba(34, 211, 238, 0.08));
    border: 2px dashed rgba(96, 165, 250, 0.4);
    border-radius: var(--radius-2xl);
    padding: 3rem 2rem;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .visual-placeholder:hover {
    border-color: rgba(96, 165, 250, 0.6);
    transform: translateY(-4px);
    box-shadow: 0 15px 40px rgba(96, 165, 250, 0.2);
  }
  
  .visual-icon {
    font-size: clamp(3.5rem, 8vw, 5rem);
    margin-bottom: 1rem;
  }
  
  .visual-label {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: var(--primary);
    font-weight: 700;
    margin-bottom: 0.5rem;
  }
  
  .visual-hint {
    font-size: clamp(0.9375rem, 2vw, 1rem);
    color: #b3b3b3;
  }
  
  /* Why Important */
  .why-important {
    margin: 3rem 0;
  }
  
  .important-title {
    font-size: clamp(1.375rem, 4vw, 1.75rem);
    font-weight: 800;
    color: var(--fg);
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .important-list {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }
  
  .important-item {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
    padding: 1.25rem;
    background: rgba(96, 165, 250, 0.03);
    border-radius: var(--radius-lg);
    border-left: 3px solid rgba(96, 165, 250, 0.3);
    transition: all 0.3s ease;
  }
  
  .important-item:hover {
    background: rgba(96, 165, 250, 0.05);
    border-left-color: rgba(96, 165, 250, 0.6);
    transform: translateX(4px);
  }
  
  .important-marker {
    font-size: 1.5rem;
    color: var(--primary);
    flex-shrink: 0;
    font-weight: 900;
  }
  
  .important-content {
    flex: 1;
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.7;
  }
  
  .important-content strong {
    color: var(--fg);
  }
  
  /* Why Value */
  .why-value {
    margin: 3rem 0;
    text-align: center;
    padding: 3rem 2rem;
    background: linear-gradient(135deg, 
      rgba(96, 165, 250, 0.12) 0%, 
      rgba(34, 211, 238, 0.08) 50%,
      rgba(96, 165, 250, 0.12) 100%
    );
    border-radius: var(--radius-2xl);
    border: 1px solid rgba(96, 165, 250, 0.2);
    box-shadow: 
      0 8px 32px rgba(96, 165, 250, 0.1),
      inset 0 1px 0 rgba(255, 255, 255, 0.1),
      0 0 0 1px rgba(96, 165, 250, 0.05);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    transition: all 0.4s ease;
  }
  
  .why-value::before {
    content: '';
    position: absolute;
    top: 0;
    left: -50%;
    width: 200%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(96, 165, 250, 0.1) 50%,
      transparent 100%
    );
    animation: shimmer 3s ease-in-out infinite;
    pointer-events: none;
  }
  
  @keyframes shimmer {
    0%, 100% { transform: translateX(-50%) translateY(0); opacity: 0; }
    50% { transform: translateX(0%) translateY(0); opacity: 1; }
  }
  
  .why-value:hover {
    border-color: rgba(96, 165, 250, 0.35);
    box-shadow: 
      0 12px 48px rgba(96, 165, 250, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.15),
      0 0 0 1px rgba(96, 165, 250, 0.1);
    transform: translateY(-2px);
  }
  
  .value-text {
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    color: #e5e5e5;
    line-height: 1.8;
    font-weight: 500;
    position: relative;
    z-index: 1;
  }
  
  .value-text strong.gradient-text {
    display: block;
    margin-top: 0.75rem;
    font-size: clamp(1.5rem, 4vw, 2rem);
    font-weight: 800;
    letter-spacing: -0.02em;
    filter: drop-shadow(0 0 20px rgba(96, 165, 250, 0.3));
  }
  
  /* Why CTA Block */
  .why-cta-block {
    margin: 3rem 0;
    text-align: center;
    padding: 3rem 2rem;
    background: linear-gradient(135deg, 
      rgba(249, 115, 22, 0.15) 0%,
      rgba(234, 88, 12, 0.12) 50%,
      rgba(249, 115, 22, 0.15) 100%
    );
    border-radius: var(--radius-2xl);
    border: 1px solid rgba(249, 115, 22, 0.35);
    box-shadow: 
      0 8px 32px rgba(249, 115, 22, 0.15),
      inset 0 1px 0 rgba(255, 255, 255, 0.1),
      0 0 0 1px rgba(249, 115, 22, 0.1);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
    transition: all 0.4s ease;
  }
  
  .why-cta-block::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
      circle,
      rgba(249, 115, 22, 0.15) 0%,
      transparent 70%
    );
    animation: pulse-glow-orange 4s ease-in-out infinite;
    pointer-events: none;
  }
  
  @keyframes pulse-glow-orange {
    0%, 100% { opacity: 0.3; transform: scale(1); }
    50% { opacity: 0.5; transform: scale(1.1); }
  }
  
  .why-cta-block:hover {
    border-color: rgba(249, 115, 22, 0.5);
    box-shadow: 
      0 12px 48px rgba(249, 115, 22, 0.2),
      inset 0 1px 0 rgba(255, 255, 255, 0.15),
      0 0 0 1px rgba(249, 115, 22, 0.15);
    transform: translateY(-2px);
  }
  
  .cta-question {
    font-size: clamp(1.375rem, 3.5vw, 1.75rem);
    color: var(--fg);
    font-weight: 800;
    margin-bottom: 1.25rem;
    letter-spacing: -0.01em;
    position: relative;
    z-index: 1;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  }
  
  .cta-action {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.8;
    font-weight: 500;
    position: relative;
    z-index: 1;
  }
  
  @media (max-width: 640px) {
    .why-value,
    .why-cta-block {
      padding: 2rem 1.5rem;
    }
    
    .value-text strong.gradient-text {
      font-size: clamp(1.375rem, 5vw, 1.75rem);
    }
  }
  
  /* === STATS SECTION === */
  .stats-section {
    background: rgba(13, 13, 16, 0.4);
    backdrop-filter: blur(10px);
    padding: 3rem 1rem;
  }
  
  @media (min-width: 768px) {
    .stats-section {
      padding: 5rem 2rem;
    }
  }
  
  .stats-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }
  
  @media (min-width: 640px) {
    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  @media (min-width: 1024px) {
    .stats-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: 2rem;
    }
  }
  
  .stats-card {
    background: rgba(10, 10, 10, 0.6);
    backdrop-filter: blur(10px);
    border: 1px solid var(--border);
    border-radius: var(--radius-2xl);
    padding: 2rem 1.5rem;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .stats-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 40px rgba(96, 165, 250, 0.1);
    border-color: rgba(96, 165, 250, 0.3);
  }
  
  .stats-number {
    display: block;
    font-size: clamp(2.5rem, 6vw + 1rem, 4rem);
    font-weight: 900;
    background: linear-gradient(90deg, var(--primary), var(--primary-2));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 0.5rem;
    line-height: 1;
  }
  
  .stats-label {
    color: #b3b3b3;
    font-size: 0.9375rem;
  }
  
  /* === FINAL CTA SECTION === */
  .final-cta-section {
    padding: 3rem 0;
  }
  
  @media (min-width: 1024px) {
    .final-cta-section {
      padding: 5rem 0;
    }
  }
  
  /* Final TG Preview */
  .final-tg-preview {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .tg-photo-box {
    width: 180px;
    height: 180px;
    margin: 0 auto 1rem;
    background: rgba(96, 165, 250, 0.05);
    border: 2px dashed rgba(96, 165, 250, 0.4);
    border-radius: var(--radius-2xl);
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }
  
  .tg-photo-box:hover {
    border-color: rgba(96, 165, 250, 0.6);
    transform: translateY(-4px);
  }
  
  .tg-emoji {
    font-size: clamp(4.5rem, 10vw, 6rem);
  }
  
  .tg-label {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: var(--primary);
    font-weight: 700;
  }
  
  /* Final Main */
  .final-main {
    text-align: center;
  }
  
  .fire-badge {
    display: inline-block;
    background: linear-gradient(135deg, rgba(249, 115, 22, 0.2), rgba(234, 88, 12, 0.15));
    color: #fb923c;
    padding: 0.75rem 1.5rem;
    border-radius: 9999px;
    font-size: clamp(0.875rem, 2vw, 1rem);
    font-weight: 900;
    letter-spacing: 0.05em;
    margin-bottom: 2rem;
  }
  
  .final-h1 {
    font-size: clamp(1.75rem, 5vw, 2.5rem);
    font-weight: 900;
    color: var(--fg);
    line-height: 1.3;
    margin-bottom: 1.5rem;
  }
  
  .final-p {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.6;
    margin-bottom: 2rem;
  }
  
  /* Steps Block */
  .steps-block {
    margin: 2rem 0;
    padding: 2rem;
    background: rgba(13, 13, 16, 0.6);
    border: 1px solid rgba(96, 165, 250, 0.15);
    border-radius: var(--radius-2xl);
    backdrop-filter: blur(10px);
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.05);
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .step-line {
    display: flex;
    align-items: center;
    gap: 0.875rem;
    padding: 0;
    min-height: 44px;
  }
  
  .step-num {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    min-width: 40px;
    background: linear-gradient(135deg, var(--primary), var(--primary-2));
    color: #fff;
    font-size: 1.125rem;
    font-weight: 900;
    border-radius: 50%;
    flex-shrink: 0;
    box-shadow: 
      0 4px 12px rgba(96, 165, 250, 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    position: relative;
  }
  
  .step-num::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    height: 80%;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    pointer-events: none;
  }
  
  .step-text {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    font-weight: 600;
    text-align: left;
    line-height: 1.5;
    margin: 0;
    flex: 1;
  }
  
  .step-text strong {
    color: var(--primary);
    font-weight: 700;
  }
  
  .arrow-down {
    text-align: center;
    font-size: 1.25rem;
    color: var(--primary);
    margin: 0.125rem 0;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.7;
    filter: drop-shadow(0 0 4px rgba(96, 165, 250, 0.3));
  }
  
  @media (max-width: 640px) {
    .steps-block {
      padding: 1.5rem;
      margin: 1.5rem 0;
    }
    
    .step-num {
      width: 36px;
      height: 36px;
      min-width: 36px;
      font-size: 1rem;
    }
    
    .step-line {
      gap: 0.75rem;
      min-height: 40px;
    }
    
    .arrow-down {
      font-size: 1.125rem;
      margin: 0.1rem 0;
      height: 20px;
    }
  }
  
  /* Benefits Block */
  .benefits-block {
    margin: 2.5rem 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .benefit-row {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.75rem 1rem;
    background: rgba(34, 197, 94, 0.05);
    border-left: 3px solid #22c55e;
    border-radius: var(--radius-lg);
  }
  
  .check-icon {
    font-size: 1.5rem;
    color: #22c55e;
    flex-shrink: 0;
  }
  
  .benefit-label {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    font-weight: 600;
  }
  
  .final-btn-group {
    margin: 2.5rem 0;
  }
  
  /* Beautiful Buttons with Shine - Full Width */
  .final-btn-group .btn-capsule {
    position: relative;
    overflow: hidden;
    display: block !important;
    width: 100% !important;
    padding: 1.25rem 2rem !important;
    background: linear-gradient(135deg, #22c55e, #16a34a) !important;
    color: #fff !important;
    font-size: clamp(1.125rem, 3vw, 1.25rem) !important;
    font-weight: 700 !important;
    border-radius: 12px !important;
    border: none !important;
    text-decoration: none !important;
    text-align: center !important;
    box-shadow: 0 8px 30px rgba(34, 197, 94, 0.4) !important;
    transition: all 0.3s ease !important;
  }
  
  .final-btn-group .btn-capsule::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100px;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 30%,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0) 70%
    );
    animation: shine 3s infinite linear;
    z-index: 1;
  }
  
  @keyframes shine {
    0% {
      left: -100px;
    }
    20% {
      left: 100%;
    }
    100% {
      left: 100%;
    }
  }
  
  .final-btn-group .btn-capsule:hover {
    transform: translateY(-2px) !important;
    box-shadow: 0 12px 40px rgba(34, 197, 94, 0.5) !important;
  }
  
  .final-btn-group .btn-outline {
    position: relative;
    overflow: hidden;
    display: block !important;
    width: 100% !important;
    padding: 1.25rem 2rem !important;
    background: linear-gradient(135deg, #22c55e, #16a34a) !important;
    color: #fff !important;
    font-size: clamp(1.125rem, 3vw, 1.25rem) !important;
    font-weight: 700 !important;
    border-radius: 12px !important;
    border: none !important;
    text-decoration: none !important;
    text-align: center !important;
    box-shadow: 0 8px 30px rgba(34, 197, 94, 0.4) !important;
    transition: all 0.3s ease !important;
  }
  
  .final-btn-group .btn-outline::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100px;
    width: 100px;
    height: 100%;
    background-image: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 30%,
      rgba(255, 255, 255, 0.8),
      rgba(255, 255, 255, 0) 70%
    );
    animation: shine 3s infinite linear;
    z-index: 1;
  }
  
  .final-btn-group .btn-outline:hover {
    transform: translateY(-2px) !important;
    box-shadow: 0 12px 40px rgba(34, 197, 94, 0.5) !important;
  }
  
  .info-line {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    margin: 2rem 0;
  }
  
  .urgency-bar {
    padding: 1.5rem;
    background: rgba(249, 115, 22, 0.05);
    border-left: 3px solid #fb923c;
    border-radius: var(--radius-lg);
    margin: 2.5rem 0;
  }
  
  .urgency-p {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #fb923c;
    font-weight: 700;
    margin-bottom: 0.75rem;
  }
  
  .waiting-p {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: #e5e5e5;
    font-weight: 600;
  }
  
  .cta-hero-box {
    background: rgba(13, 13, 16, 0.6);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: var(--radius-2xl);
    padding: 3rem 2rem;
    text-align: center;
    position: relative;
    overflow: hidden;
  }
  
  @media (min-width: 768px) {
    .cta-hero-box {
      padding: 4rem 3rem;
    }
  }
  
  .cta-hero-box::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(96, 165, 250, 0.1), transparent 60%);
    animation: rotate 20s linear infinite;
  }
  
  .cta-tg-icon {
    font-size: clamp(3.5rem, 8vw, 5rem);
    margin-bottom: 1.5rem;
    position: relative;
    z-index: 1;
  }
  
  .cta-big-title {
    font-size: clamp(2rem, 5vw, 3rem);
    font-weight: 900;
    color: var(--fg);
    line-height: 1.2;
    margin-bottom: 1.5rem;
    position: relative;
    z-index: 1;
  }
  
  .cta-subtitle {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    line-height: 1.6;
    margin-bottom: 2rem;
    position: relative;
    z-index: 1;
  }
  
  .highlight {
    color: var(--primary);
    font-weight: 700;
    background: rgba(96, 165, 250, 0.15);
    padding: 0.125rem 0.5rem;
    border-radius: 4px;
  }
  
  .cta-value-box {
    display: inline-block;
    background: rgba(96, 165, 250, 0.05);
    border: 1px solid rgba(96, 165, 250, 0.2);
    border-radius: var(--radius-xl);
    padding: 1.5rem 2rem;
    margin: 1.5rem 0 2.5rem;
    text-align: left;
    position: relative;
    z-index: 1;
  }
  
  .value-point {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    margin: 0.75rem 0;
    font-weight: 600;
  }
  
  .cta-main-button {
    margin: 2.5rem 0;
    position: relative;
    z-index: 1;
  }
  
  .btn-mega-cta {
    display: inline-flex;
    align-items: center;
    gap: 1rem;
    padding: 1.5rem 3.5rem;
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: #fff;
    font-size: clamp(1.25rem, 3vw, 1.5rem);
    font-weight: 900;
    border-radius: 16px;
    text-decoration: none;
    transition: all 0.3s ease;
    box-shadow: 0 10px 40px rgba(34, 197, 94, 0.4);
    position: relative;
  }
  
  .btn-mega-cta::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    opacity: 0;
    border-radius: 16px;
    transition: opacity 0.3s ease;
  }
  
  .btn-mega-cta:hover {
    transform: translateY(-4px) scale(1.02);
    box-shadow: 0 15px 50px rgba(34, 197, 94, 0.5);
  }
  
  .btn-mega-cta:hover::before {
    opacity: 1;
  }
  
  .btn-icon-left {
    font-size: 1.5rem;
  }
  
  .btn-arrow {
    font-size: 1.5rem;
    transition: transform 0.3s ease;
  }
  
  .btn-mega-cta:hover .btn-arrow {
    transform: translateX(4px);
  }
  
  .btn-subtext {
    font-size: clamp(0.875rem, 2vw, 1rem);
    color: #b3b3b3;
    margin-top: 1rem;
  }
  
  .cta-urgency-box {
    margin: 2.5rem 0;
    padding: 1.5rem;
    background: rgba(249, 115, 22, 0.05);
    border-left: 3px solid #fb923c;
    border-radius: var(--radius-lg);
    position: relative;
    z-index: 1;
  }
  
  .urgency-text {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #fb923c;
    font-weight: 700;
    margin-bottom: 0.75rem;
  }
  
  .waiting-text {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: #e5e5e5;
    font-weight: 600;
  }
  
  .cta-alt-button {
    margin-top: 2rem;
    position: relative;
    z-index: 1;
  }
  
  .btn-alt-cta {
    display: inline-block;
    padding: 1.25rem 2.5rem;
    background: transparent;
    border: 2px solid var(--primary);
    color: var(--primary);
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    font-weight: 700;
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .btn-alt-cta:hover {
    background: rgba(96, 165, 250, 0.1);
    border-color: var(--primary-2);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(96, 165, 250, 0.3);
  }
  
  /* TG Channel Preview */
  .tg-channel-preview {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .tg-photo-placeholder {
    width: 120px;
    height: 120px;
    margin: 0 auto 1rem;
    background: linear-gradient(135deg, rgba(96, 165, 250, 0.15), rgba(34, 211, 238, 0.1));
    border: 2px solid rgba(96, 165, 250, 0.3);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
  }
  
  .tg-photo-placeholder:hover {
    transform: scale(1.05);
    border-color: rgba(96, 165, 250, 0.5);
  }
  
  .tg-photo-icon {
    font-size: 3.5rem;
  }
  
  .tg-channel-name {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: var(--primary);
    font-weight: 700;
  }
  
  /* CTA Content */
  .cta-content {
    text-align: center;
  }
  
  .cta-title {
    font-size: clamp(1.375rem, 4vw, 1.75rem);
    font-weight: 800;
    color: var(--fg);
    line-height: 1.4;
    margin-bottom: 2rem;
  }
  
  .cta-description {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: #e5e5e5;
    line-height: 1.7;
    margin-bottom: 3rem;
  }
  
  .cta-button-block {
    margin: 3rem 0;
  }
  
  .button-label {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    margin-bottom: 1.5rem;
  }
  
  .cta-btn {
    display: inline-block;
    padding: 1.25rem 3rem;
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    font-weight: 700;
    border-radius: 12px;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .cta-btn-primary {
    background: linear-gradient(135deg, var(--primary), var(--primary-2));
    color: #fff;
    box-shadow: 0 4px 20px rgba(96, 165, 250, 0.3);
  }
  
  .cta-btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 30px rgba(96, 165, 250, 0.4);
  }
  
  .cta-btn-secondary {
    background: transparent;
    border: 2px solid var(--primary);
    color: var(--primary);
  }
  
  .cta-btn-secondary:hover {
    background: rgba(96, 165, 250, 0.1);
    transform: translateY(-2px);
  }
  
  .cta-info {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.7;
    margin: 2rem 0;
  }
  
  .cta-urgency-block {
    margin: 2.5rem 0;
  }
  
  .urgency-line {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    margin: 0.75rem 0;
  }
  
  /* TG Preview */
  .tg-preview {
    margin-bottom: 3rem;
  }
  
  .tg-preview-box {
    background: linear-gradient(135deg, rgba(0, 136, 204, 0.15), rgba(0, 136, 204, 0.08));
    border: 2px solid rgba(0, 136, 204, 0.4);
    border-radius: var(--radius-2xl);
    padding: 2rem;
    text-align: center;
    transition: all 0.3s ease;
  }
  
  .tg-preview-box:hover {
    transform: translateY(-4px);
    box-shadow: 0 15px 40px rgba(0, 136, 204, 0.3);
    border-color: rgba(0, 136, 204, 0.6);
  }
  
  .tg-icon {
    font-size: clamp(3rem, 8vw, 4rem);
    margin-bottom: 0.75rem;
  }
  
  .tg-label {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #60a5fa;
    font-weight: 700;
  }
  
  /* Main Title */
  .cta-main-title {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .cta-headline {
    font-size: clamp(1.5rem, 4vw, 2rem);
    font-weight: 900;
    color: var(--fg);
    line-height: 1.3;
    margin-bottom: 1rem;
  }
  
  .cta-instruction {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #b3b3b3;
    line-height: 1.6;
  }
  
  .text-highlight {
    color: var(--primary);
    background: rgba(96, 165, 250, 0.1);
    padding: 0.125rem 0.5rem;
    border-radius: 4px;
  }
  
  /* Value */
  .cta-value {
    text-align: center;
    margin: 2rem 0;
  }
  
  .value-main {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    line-height: 1.7;
  }
  
  /* Primary Button */
  .cta-button-primary {
    text-align: center;
    margin: 3rem 0;
  }
  
  .button-intro {
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    color: #e5e5e5;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }
  
  .btn-cta-primary {
    display: inline-flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem 3rem;
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: #fff;
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    font-weight: 900;
    border-radius: 9999px;
    text-decoration: none;
    transition: all 0.3s ease;
    box-shadow: 0 10px 30px rgba(34, 197, 94, 0.4);
    position: relative;
    overflow: hidden;
  }
  
  .btn-cta-primary::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .btn-cta-primary:hover {
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 15px 40px rgba(34, 197, 94, 0.5);
  }
  
  .btn-cta-primary:hover::before {
    opacity: 1;
  }
  
  .btn-badge {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.875rem;
    font-weight: 700;
  }
  
  .pulse-animation {
    animation: pulse-glow 2s ease-in-out infinite;
  }
  
  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 10px 30px rgba(34, 197, 94, 0.4);
    }
    50% {
      box-shadow: 0 10px 40px rgba(34, 197, 94, 0.7), 0 0 20px rgba(34, 197, 94, 0.5);
    }
  }
  
  /* Info Block */
  .cta-info {
    text-align: center;
    margin: 2rem 0;
    padding: 1.5rem;
    background: rgba(96, 165, 250, 0.05);
    border-radius: var(--radius-xl);
  }
  
  .info-text {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
    line-height: 1.7;
  }
  
  /* Urgency Block */
  .cta-urgency {
    text-align: center;
    margin: 3rem 0;
    padding: 2rem 1.5rem;
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.08));
    border: 2px solid rgba(239, 68, 68, 0.3);
    border-radius: var(--radius-2xl);
  }
  
  .urgency-badge {
    display: inline-block;
    background: linear-gradient(135deg, #ef4444, #dc2626);
    color: #fff;
    padding: 0.5rem 1.25rem;
    border-radius: 9999px;
    font-size: clamp(0.875rem, 2vw, 1rem);
    font-weight: 700;
    margin-bottom: 1rem;
  }
  
  .blink {
    animation: blink-warning 1.5s ease-in-out infinite;
  }
  
  @keyframes blink-warning {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.6;
    }
  }
  
  .urgency-text {
    font-size: clamp(1.125rem, 3vw, 1.375rem);
    color: #e5e5e5;
    font-weight: 600;
    margin-bottom: 1rem;
  }
  
  .urgency-waiting {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #b3b3b3;
  }
  
  /* Secondary Button */
  .cta-button-secondary {
    text-align: center;
    margin: 3rem 0;
  }
  
  .button-final {
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    color: #e5e5e5;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }
  
  .btn-cta-secondary {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1.25rem 2.5rem;
    background: linear-gradient(135deg, rgba(249, 115, 22, 0.2), rgba(234, 88, 12, 0.15));
    border: 2px solid rgba(249, 115, 22, 0.5);
    color: #fb923c;
    font-size: clamp(1.125rem, 3vw, 1.25rem);
    font-weight: 900;
    border-radius: 9999px;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  .btn-cta-secondary:hover {
    background: linear-gradient(135deg, rgba(249, 115, 22, 0.3), rgba(234, 88, 12, 0.25));
    border-color: rgba(249, 115, 22, 0.8);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 10px 30px rgba(249, 115, 22, 0.4);
  }
  
  .btn-icon {
    font-size: 1.5rem;
  }
  
  /* === UTILITIES === */
  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }
  
  .section-label {
    font-size: 0.875rem;
    color: var(--primary);
    font-weight: 600;
    margin-bottom: 0.5rem;
  }
  
  .section-title {
    font-size: clamp(2rem, 5vw + 1rem, 3.5rem);
    font-weight: 900;
    color: var(--fg);
  }
  
  .section-subtitle {
    font-size: clamp(1rem, 1.5vw + 0.5rem, 1.125rem);
    color: #b3b3b3;
    margin-top: 0.5rem;
  }
  
  .gradient-text {
    background: linear-gradient(90deg, var(--primary), var(--primary-2));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    /* Use system fonts or better balanced font stack for uniform rendering */
    /* System fonts often have better cyrillic/latin balance */
    font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', system-ui, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif !important;
    font-weight: inherit;
    font-style: normal !important;
    letter-spacing: inherit;
    /* Disable font synthesis to prevent automatic weight variations */
    font-synthesis: none;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility; /* Better for mixed scripts */
    /* Ensure numbers and all characters have same weight - no special numeric variants */
    font-variant-numeric: normal !important;
    font-variant-east-asian: normal;
    font-variant-ligatures: none !important;
    font-feature-settings: normal !important;
    text-transform: none;
    /* Force consistent rendering for all character types */
    font-optical-sizing: auto;
    font-kerning: normal;
    /* Ensure display type for consistent rendering */
    display: inline-block;
    vertical-align: baseline;
    /* Force consistent color application */
    color: transparent;
  }
  
  /* Force same weight for all child elements within gradient text */
  /* This ensures Russian, English letters and numbers all have identical weight */
  .gradient-text *,
  .gradient-text span,
  .gradient-text strong,
  .gradient-text em {
    font-weight: inherit !important;
    font-style: normal !important;
    font-variant-numeric: normal !important;
    font-feature-settings: normal !important;
    font-synthesis: none;
    font-family: inherit !important;
  }
  
  
  /* === BUTTONS === */
  .btn-outline {
    background: transparent;
    border: 2px solid var(--primary);
  }
  
  .btn-outline:hover {
    background: rgba(96, 165, 250, 0.1);
  }
  
  /* === RESPONSIVE === */
  @media (max-width: 768px) {
    .hero-cta-buttons {
      flex-direction: column;
    }
    
    .system-item {
      flex-direction: column;
      gap: 1rem;
    }
    
    .results-numbers {
      flex-direction: column;
    }
  }
</style>
