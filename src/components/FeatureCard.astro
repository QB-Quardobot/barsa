---
interface Props {
  icon: string;
  title: string;
  description: string;
}

const { icon, title, description } = Astro.props;
---

<div class="feature-card reveal-scale">
  <div class="feature-icon" set:html={icon} aria-hidden="true"></div>
  <h3 class="feature-title">{title}</h3>
  <p class="feature-description">{description}</p>
</div>

<style>
  .feature-card {
    position: relative;
    background: var(--panel);
    border: 1px solid transparent;
    border-radius: var(--radius-2xl);
    padding: 2rem;
    transition: all 0.3s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    overflow: hidden;
  }
  
  /* Border gradient effect */
  .feature-card::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: var(--radius-2xl);
    padding: 1px;
    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-2) 100%);
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0.3;
    transition: opacity 0.3s ease;
  }
  
  .feature-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 60px rgba(96, 165, 250, 0.25);
  }
  
  .feature-card:hover::before {
    opacity: 0.8;
  }
  
  @media (prefers-reduced-motion: reduce) {
    .feature-card {
      transition: none;
    }
    
    .feature-card:hover {
      transform: none;
    }
  }
  
  .feature-icon {
    width: 48px;
    height: 48px;
    flex-shrink: 0;
  }
  
  .feature-icon svg {
    width: 100%;
    height: 100%;
    color: var(--primary);
  }
  
  .feature-title {
    font-size: clamp(1.125rem, 2vw + 0.125rem, 1.5rem); /* 18px-24px */
    font-weight: 700;
    line-height: 1.3;
    margin-bottom: var(--spacing-sm);
    color: var(--fg);
  }
  
  .feature-description {
    color: var(--muted);
    line-height: 1.6;
    font-size: clamp(0.875rem, 1vw + 0.125rem, 1rem); /* 14px-16px */
    margin: 0;
    flex-grow: 1;
  }
</style>
